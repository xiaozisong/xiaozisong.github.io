import{_ as n,o as s,c as a,e as p}from"./app.1fa09df8.js";const t={},o=p(`<h1 id="\u6392\u5E8F\u548C\u67E5\u627E" tabindex="-1"><a class="header-anchor" href="#\u6392\u5E8F\u548C\u67E5\u627E" aria-hidden="true">#</a> \u6392\u5E8F\u548C\u67E5\u627E</h1><h2 id="\u6392\u5E8F\u7B97\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u6392\u5E8F\u7B97\u6CD5" aria-hidden="true">#</a> \u6392\u5E8F\u7B97\u6CD5</h2><blockquote><p>\u6392\u5E8F\u7B97\u6CD5\u6CA1\u6709\u4F18\u52A3\u4E4B\u5206\uFF0C\u5728\u4E0D\u540C\u7684\u573A\u666F\u4E2D\uFF0C\u4E0D\u540C\u7684\u6392\u5E8F\u7B97\u6CD5\u6267\u884C\u6548\u7387\u4E0D\u540C\u3002</p></blockquote><ol><li><strong>\u5192\u6CE1\u6392\u5E8F Bubble Sort</strong></li></ol><p>\u4E00\u6B21\u5192\u6CE1\u6392\u5E8F\uFF0C\u53EF\u4EE5\u5C06\u67D0\u4E2A\u533A\u57DF\u5E8F\u5217\u7684\u6700\u5927\u503C\u6392\u5E8F\u5230\u8BE5\u533A\u57DF\u7684\u6700\u540E\u4E00\u4F4D\uFF0C\u5177\u4F53\u7684\u65B9\u5F0F\u662F\uFF1A</p><ol><li>\u5C06\u7B2C 1 \u4F4D\u548C\u7B2C 2 \u4F4D\u6BD4\u8F83\uFF0C\u5982\u679C\u524D\u8005\u6BD4\u540E\u8005\u5927\u5219\u4EA4\u6362</li><li>\u5C06\u7B2C 2 \u4F4D\u548C\u7B2C 3 \u4F4D\u6BD4\u8F83\uFF0C\u5982\u679C\u524D\u8005\u6BD4\u540E\u8005\u5927\u5219\u4EA4\u6362</li><li>\u4F9D\u6B21\u7C7B\u63A8\uFF0C\u76F4\u5230\u6BD4\u8F83\u5230\u8BE5\u533A\u57DF\u7684\u6700\u540E\u4E24\u4F4D</li><li>\u91CD\u590D\u4E0A\u8FF0\u8FC7\u7A0B\uFF0C\u76F4\u5230\u5E8F\u5217\u6392\u5E8F\u5B8C\u6210</li></ol><blockquote><p>\u5192\u6CE1\u6392\u5E8F\u6548\u7387\u4E00\u822C\uFF0C\u5728\u5404\u79CD\u60C5\u51B5\u4E0B\u4E0D\u4F1A\u592A\u597D\uFF0C\u4E5F\u4E0D\u81F3\u4E8E\u592A\u5DEE \u5982\u679C\u6570\u7EC4\u672C\u8EAB\u662F\u6BD4\u8F83\u6709\u5E8F\u7684\uFF0C\u5192\u6CE1\u6392\u5E8F\u8FD8\u662F\u4E0D\u9519\u7684</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">bubbleSort</span><span class="token punctuation">(</span><span class="token parameter">list</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
 <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> list<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> list<span class="token punctuation">.</span>length <span class="token operator">-</span> i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token keyword">if</span> <span class="token punctuation">(</span>list<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&gt;</span> list<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">;</span><span class="token punctuation">[</span>list<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> list<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>list<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> list<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">]</span>
   <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
 <span class="token punctuation">}</span>
 <span class="token keyword">return</span> list
<span class="token punctuation">}</span>

<span class="token keyword">const</span> list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">bubbleSort</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// [1, 2, 3, 4, 5, 6, 7]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li><strong>\u63D2\u5165\u6392\u5E8F Insertion Sort</strong></li></ol><p>\u5C06\u5E8F\u5217\u5206\u4E3A\u4E24\u4E2A\u90E8\u5206\uFF0C\u4E00\u90E8\u5206\u662F\u6709\u5E8F\u7684\uFF0C\u4E00\u90E8\u5206\u662F\u65E0\u5E8F\u7684\uFF0C\u73B0\u5728\u8981\u505A\u7684\u662F\uFF0C\u5C31\u662F\u4E0D\u65AD\u7684\u4ECE\u65E0\u5E8F\u7684\u90E8\u5206\u53D6\u51FA\u6570\u636E\uFF0C\u52A0\u5165\u5230\u6709\u5E8F\u7684\u90E8\u5206\uFF0C\u76F4\u5230\u6574\u4E2A\u6392\u5E8F\u5B8C\u6210</p><p>\u4F8B\u5982\uFF1A\u5E8F\u5217[5, 7, 2, 3, 6]</p><ol><li>\u5206\u4E3A\u6709\u5E8F\u7684\u5E8F\u5217\u548C\u65E0\u5E8F\u7684\u5E8F\u5217 (5) (7 2 3 6)</li><li>\u4E0D\u65AD\u7684\u6269\u5145\u6709\u5E8F\u5E8F\u5217 (5 7) (2 3 6)</li><li>\u4E0D\u65AD\u7684\u6269\u5145\u6709\u5E8F\u5E8F\u5217 (2 5 7) (3 6)</li><li>\u4E0D\u65AD\u7684\u6269\u5145\u6709\u5E8F\u5E8F\u5217 (2 3 5 7) (6)</li><li>\u4E0D\u65AD\u7684\u6269\u5145\u6709\u5E8F\u5E8F\u5217 (2 3 5 6 7)</li><li>\u6392\u5E8F\u5B8C\u6210</li></ol><blockquote><p>\u63D2\u5165\u6392\u5E8F\u5728\u5C0F\u89C4\u6A21\u7684\u6570\u7EC4\u4E2D\u6548\u7387\u5F88\u9AD8\uFF0C\u5982\u679C\u6570\u7EC4\u672C\u8EAB\u662F\u6BD4\u8F83\u6709\u5E8F\u7684\uFF0C\u5219\u6548\u7387\u4F1A\u8FDB\u4E00\u6B65\u63D0\u5347 V8 \u5F15\u64CE\u5728\u6570\u7EC4\u6BD4\u8F83\u5C0F\u7684\u65F6\u5019\u4F1A\u4F7F\u7528\u63D2\u5165\u6392\u5E8F</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">insertSort</span><span class="token punctuation">(</span><span class="token parameter">list</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
 <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> list<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5F53\u524D\u4E0B\u6807\u5C0F\u4E8E\u524D\u9762\u6392\u597D\u7684\u53F3\u4FA7\u8FB9\u754C\u65F6\u624D\u9700\u8981\u6392\u5E8F</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>list<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;</span> list<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token keyword">let</span> temp <span class="token operator">=</span> list<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
   <span class="token keyword">let</span> j <span class="token operator">=</span> i
   <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span> j <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> j<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>j <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> temp <span class="token operator">&lt;</span> list<span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
     list<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> list<span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
     <span class="token keyword">break</span>
    <span class="token punctuation">}</span>
   <span class="token punctuation">}</span>
   list<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> temp
  <span class="token punctuation">}</span>
 <span class="token punctuation">}</span>
 <span class="token keyword">return</span> list
<span class="token punctuation">}</span>

<span class="token keyword">const</span> list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">insertSort</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// [1, 2, 3, 4, 5, 6, 7]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li><strong>\u5FEB\u901F\u6392\u5E8F Quick Sort</strong></li></ol><p>\u9009\u62E9\u4E00\u4E2A\u6570\uFF08\u6BD4\u5982\u5E8F\u5217\u7684\u6700\u540E\u4E00\u4F4D\uFF09\u4F5C\u4E3A\u57FA\u51C6\u6570\uFF0C\u5C06\u6574\u4E2A\u5E8F\u5217\u6392\u5E8F\u6210\u4E24\u90E8\u5206\uFF0C\u4E00\u90E8\u5206\u6BD4\u8BE5\u6570\u5C0F\uFF0C\u53E6\u4E00\u90E8\u5206\u6BD4\u8BE5\u6570\u5927\uFF0C\u57FA\u51C6\u6570\u5728\u4E2D\u95F4\uFF0C\u7136\u540E\u5BF9\u5269\u4F59\u7684\u5E8F\u5217\u505A\u540C\u6837\u7684\u4E8B\u60C5\uFF0C\u76F4\u5230\u6392\u5E8F\u5B8C\u6210</p><p>\u4F8B\u5982\uFF1A\u5E8F\u5217[5, 7, 2, 3, 6, 4]</p><ol><li>\u9009\u62E9 4 \u4F5C\u4E3A\u57FA\u51C6\u6570\uFF0C\u6392\u5E8F\u6210\u4E3A\uFF1A(3, 2) 4 (7, 6, 5)</li><li>\u5BF9\u4E8E 3,2\uFF0C \u7EE7\u7EED\u4F7F\u7528\u8BE5\u65B9\u5F0F\u6392\u5E8F\uFF0C\u5F97\u5230\uFF1A (2, 3) 4 (7,6,5)</li><li>\u5BF9\u4E8E 7,6,5\uFF0C\u7EE7\u7EED\u4F7F\u7528\u8BE5\u65B9\u5F0F\u6392\u5E8F\uFF0C\u5F97\u5230\uFF1A (2, 3) 4 (5,6,7)</li><li>\u6392\u5E8F\u5B8C\u6210</li></ol><blockquote><p>\u5F53\u6570\u7EC4\u6BD4\u8F83\u5927\u5E76\u4E14\u6BD4\u8F83\u6DF7\u4E71\u7684\u65F6\u5019\uFF0C\u4F7F\u7528\u5FEB\u901F\u6392\u5E8F\u6548\u7387\u5F88\u9AD8 V8 \u5F15\u64CE\u5728\u6570\u7EC4\u8F83\u5927\u65F6\u4F1A\u81EA\u52A8\u4F7F\u7528\u5FEB\u901F\u6392\u5E8F</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">quickSort</span><span class="token punctuation">(</span><span class="token parameter">list</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
 <span class="token keyword">function</span> <span class="token function">_quickSort</span><span class="token punctuation">(</span><span class="token parameter">left<span class="token punctuation">,</span> right</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>left <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> right <span class="token operator">&gt;=</span> list<span class="token punctuation">.</span>length <span class="token operator">||</span> left <span class="token operator">&gt;</span> right<span class="token punctuation">)</span> <span class="token keyword">return</span>
  <span class="token comment">// \u62FF\u4E00\u4E2A\u57FA\u51C6\u6570</span>
  <span class="token keyword">let</span> key <span class="token operator">=</span> list<span class="token punctuation">[</span>right<span class="token punctuation">]</span>
  <span class="token keyword">let</span> low <span class="token operator">=</span> left<span class="token punctuation">,</span>
   high <span class="token operator">=</span> right
  <span class="token comment">// \u6B64\u5FAA\u73AF\u7ED3\u675F\u540Elow === high</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>low <span class="token operator">&lt;</span> high<span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token keyword">while</span> <span class="token punctuation">(</span>list<span class="token punctuation">[</span>low<span class="token punctuation">]</span> <span class="token operator">&lt;=</span> key <span class="token operator">&amp;&amp;</span> low <span class="token operator">&lt;</span> high<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    low<span class="token operator">++</span>
   <span class="token punctuation">}</span>
   list<span class="token punctuation">[</span>high<span class="token punctuation">]</span> <span class="token operator">=</span> list<span class="token punctuation">[</span>low<span class="token punctuation">]</span>
   <span class="token keyword">while</span> <span class="token punctuation">(</span>list<span class="token punctuation">[</span>high<span class="token punctuation">]</span> <span class="token operator">&gt;=</span> key <span class="token operator">&amp;&amp;</span> low <span class="token operator">&lt;</span> high<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    high<span class="token operator">--</span>
   <span class="token punctuation">}</span>
   list<span class="token punctuation">[</span>low<span class="token punctuation">]</span> <span class="token operator">=</span> list<span class="token punctuation">[</span>high<span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// low === high\uFF0C\u5C06\u57FA\u51C6\u503C\u653E\u5230\u5F53\u524D\u4F4D\u7F6E</span>
  list<span class="token punctuation">[</span>low<span class="token punctuation">]</span> <span class="token operator">=</span> key
  <span class="token comment">// \u641E\u5B9A\u5DE6\u8FB9</span>
  <span class="token function">_quickSort</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> low <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>
  <span class="token comment">// \u641E\u5B9A\u53F3\u8FB9</span>
  <span class="token function">_quickSort</span><span class="token punctuation">(</span>low <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> right<span class="token punctuation">)</span>
 <span class="token punctuation">}</span>
 <span class="token function">_quickSort</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> list<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>
 <span class="token keyword">return</span> list
<span class="token punctuation">}</span>

<span class="token keyword">const</span> list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">quickSort</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// [1, 2, 3, 4, 5, 6, 7]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li><strong>\u5F52\u5E76 Merge Sort</strong></li></ol><p>\u5F52\u5E76\u6392\u5E8F\u7684\u65F6\u95F4\u590D\u6742\u5EA6\u4E3AO(logn)\uFF0C\u56E0\u4E3A\u5229\u7528\u5230\u9012\u5F52\u7B97\u6CD5\uFF0C\u706B\u72D0\u6D4F\u89C8\u5668\u7684\u6392\u5E8F\u5C31\u662F\u5229\u7528\u7684\u5F52\u5E76\u6392\u5E8F\u3002</p><ul><li>\u601D\u8DEF: <ol><li>\u5206: \u628A\u6570\u7EC4\u5288\u6210\u4E24\u534A\uFF0C\u518D\u9012\u5F52\u5730\u5BF9\u5B50\u6570\u7EC4\u8FDB\u884C\u201C\u5206\u201D\u64CD\u4F5C\uFF0C\u76F4\u5230\u5206\u6210\u4E00\u4E2A\u4E2A\u5355\u72EC\u7684\u6570\u3002</li><li>\u5408: \u628A\u4E24\u4E2A\u6570\u5408\u5E76\u4E3A\u6709\u5E8F\u6570\u7EC4\uFF0C\u518D\u5BF9\u6709\u5E8F\u6570\u7EC4\u8FDB\u884C\u5408\u5E76\uFF0C\u76F4\u5230\u5168\u90E8\u5B50\u6570\u7EC4\u5408\u5E76\u4E3A\u4E00\u4E2A\u5B8C\u6574\u6570\u7EC4\u3002</li><li>\u65B0\u5EFA\u4E00\u4E2A\u7A7A\u6570\u7EC4res, \u7528\u4E8E\u5B58\u653E\u6700\u7EC8\u6392\u5E8F\u540E\u7684\u6570\u7EC4\u3002</li><li>\u6BD4\u8F83\u4E24\u4E2A\u6709\u5E8F\u6570\u7EC4\u7684\u5934\u90E8\uFF0C\u8F83\u5C0F\u8005\u51FA\u961F\u5E76\u63A8\u5165res\u4E2D\u3002</li><li>\u5982\u679C\u4E24\u4E2A\u6570\u7EC4\u8FD8\u6709\u503C\uFF0C\u5219\u91CD\u590D\u7B2C\u56DB\u6B65(\u9012\u5F52)\u3002</li></ol></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">mergeSort</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token function-variable function">dfs</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span> arr<span class="token punctuation">;</span>
    <span class="token keyword">const</span> mid <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span>length <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> left <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> mid<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> right <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>mid<span class="token punctuation">,</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> orderLeft <span class="token operator">=</span> <span class="token function">dfs</span><span class="token punctuation">(</span>left<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> orderRight <span class="token operator">=</span> <span class="token function">dfs</span><span class="token punctuation">(</span>right<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>orderLeft<span class="token punctuation">.</span>length <span class="token operator">||</span> orderRight<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>orderLeft<span class="token punctuation">.</span>length <span class="token operator">&amp;&amp;</span> orderRight<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>orderLeft<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">&lt;</span> orderRight<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">?</span> orderLeft<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> orderRight<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>orderLeft<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>orderLeft<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>orderRight<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>orderRight<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> res
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> res  <span class="token operator">=</span>  <span class="token function">dfs</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>
  res<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">n <span class="token punctuation">,</span>i</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">this</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> n<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span>
arr<span class="token punctuation">.</span><span class="token function">mergeSort</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u67E5\u8BE2\u7B97\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u67E5\u8BE2\u7B97\u6CD5" aria-hidden="true">#</a> \u67E5\u8BE2\u7B97\u6CD5</h2><p>\u4E0B\u9762\u7684\u4F8B\u5B50\u5747\u4F7F\u7528\u6B64\u6570\u7EC4\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol><li><strong>\u987A\u5E8F\u67E5\u627E Inorder Search</strong></li></ol><p>\u5373\u666E\u901A\u7684\u904D\u5386\uFF0C\u5C5E\u4E8E\u7B97\u6CD5\u7684\u7A77\u4E3E\u6CD5\uFF0C\u6CA1\u5565\u597D\u89E3\u91CA\u7684</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u987A\u5E8F\u67E5\u627E</span>
<span class="token keyword">function</span> <span class="token function">inorderSearch</span><span class="token punctuation">(</span><span class="token parameter">list<span class="token punctuation">,</span> target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token operator">!</span>target<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span>
 <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> list<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>list<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">===</span> target<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">true</span>
 <span class="token punctuation">}</span>
 <span class="token keyword">return</span> <span class="token boolean">false</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">inorderSearch</span><span class="token punctuation">(</span>list<span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">inorderSearch</span><span class="token punctuation">(</span>list<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li><strong>\u4E8C\u5206\u67E5\u627E Binary Search</strong></li></ol><p>\u5982\u679C\u4E00\u4E2A\u5E8F\u5217\u662F\u4E00\u4E2A\u6392\u5E8F\u597D\u7684\u5E8F\u5217\uFF0C\u5219\u4F7F\u7528\u4E8C\u5206\u67E5\u627E\u53EF\u4EE5\u6781\u5927\u7684\u7F29\u77ED\u67E5\u627E\u65F6\u95F4</p><p>\u5177\u4F53\u7684\u505A\u6CD5\u662F\uFF1A</p><p>\u67E5\u627E\u8BE5\u5E8F\u5217\u4E2D\u95F4\u672A\u77E5\u7684\u6570\u636E</p><ol><li>\u76F8\u7B49\uFF0C\u627E\u5230</li><li>\u8981\u627E\u7684\u6570\u636E\u8F83\u5927\uFF0C\u5219\u5BF9\u540E\u7EED\u90E8\u5206\u7684\u6570\u636E\u505A\u540C\u6837\u7684\u6B65\u9AA4</li><li>\u8981\u627E\u7684\u6570\u636E\u8F83\u5C0F\uFF0C\u5219\u5BF9\u524D\u9762\u90E8\u5206\u7684\u6570\u636E\u505A\u540C\u6837\u7684\u6B65\u9AA4</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u4E8C\u5206\u67E5\u627E</span>
<span class="token keyword">function</span> <span class="token function">binarySearch</span><span class="token punctuation">(</span><span class="token parameter">list<span class="token punctuation">,</span> target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token operator">!</span>target<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span>
 <span class="token keyword">function</span> <span class="token function">_binarySearch</span><span class="token punctuation">(</span><span class="token parameter">left<span class="token punctuation">,</span> right</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u4E24\u4E2A\u6307\u9488\u91CD\u5408\u4E86\uFF0C\u5224\u65AD\u5F53\u524D\u503C\u662F\u5426\u7B26\u5408\u6761\u4EF6</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>left <span class="token operator">===</span> right <span class="token operator">&amp;&amp;</span> list<span class="token punctuation">[</span>left<span class="token punctuation">]</span> <span class="token operator">!==</span> target<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span>
  <span class="token comment">// \u6392\u9664\u610F\u5916\u60C5\u51B5</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>left <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> right <span class="token operator">&gt;</span> list<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">||</span> left <span class="token operator">&gt;</span> right<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span>
  <span class="token comment">// \u5728\u6307\u5B9A\u8303\u56F4\u5185\uFF0C\u5F00\u59CB\u4E8C\u5206</span>
  <span class="token keyword">const</span> mid <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span>left <span class="token operator">+</span> right<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>list<span class="token punctuation">[</span>mid<span class="token punctuation">]</span> <span class="token operator">===</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token comment">// \u4E2D\u95F4\u503C\u6B63\u597D\u5C31\u662F\u76EE\u6807\u503C\uFF0C\u5373\u627E\u5230\u4E86</span>
   <span class="token keyword">return</span> <span class="token boolean">true</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>list<span class="token punctuation">[</span>mid<span class="token punctuation">]</span> <span class="token operator">&gt;</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token comment">// \u4E2D\u95F4\u503C\u6BD4\u76EE\u6807\u503C\u5927\uFF0C\u5373\u76EE\u6807\u503C\u5728 \u5DE6\u8FB9\u503C ~ \u4E2D\u95F4\u503C-1 \u8FD9\u4E2A\u8303\u56F4\uFF0C\u5728\u5DE6\u8FB9\u7EE7\u7EED\u67E5\u627E</span>
   <span class="token keyword">return</span> <span class="token function">_binarySearch</span><span class="token punctuation">(</span>left<span class="token punctuation">,</span> mid <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
   <span class="token comment">// \u4E2D\u95F4\u503C\u6BD4\u76EE\u6807\u503C\u5C0F\uFF0C\u5373\u76EE\u6807\u503C\u5728 \u4E2D\u95F4\u503C+1 ~ \u53F3\u8FB9\u503C\u8FD9\u4E2A\u8303\u56F4\uFF0C\u5728\u53F3\u8FB9\u7EE7\u7EED\u67E5\u627E</span>
   <span class="token keyword">return</span> <span class="token function">_binarySearch</span><span class="token punctuation">(</span>mid <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> right<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
 <span class="token punctuation">}</span>
 <span class="token keyword">return</span> <span class="token function">_binarySearch</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> list<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">binarySearch</span><span class="token punctuation">(</span>list<span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">binarySearch</span><span class="token punctuation">(</span>list<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li><strong>\u63D2\u503C\u67E5\u627E Interpolation Search</strong></li></ol><p>\u63D2\u503C\u67E5\u627E\u662F\u5BF9\u4E8C\u5206\u67E5\u627E\u7684\u8FDB\u4E00\u6B65\u6539\u8FDB</p><p>\u5982\u679C\u5E8F\u5217\u4E0D\u4EC5\u662F\u4E00\u4E2A\u6392\u5E8F\u597D\u7684\u5E8F\u5217\uFF0C\u800C\u4E14\u5E8F\u5217\u7684\u6B65\u957F\u5927\u81F4\u76F8\u540C\uFF0C\u4F7F\u7528\u63D2\u503C\u67E5\u627E\u4F1A\u66F4\u5FEB\u7684\u627E\u5230\u76EE\u6807\u3002</p><p>\u63D2\u503C\u67E5\u627E\u57FA\u4E8E\u5982\u4E0B\u5047\u8BBE\uFF1A\u4E0B\u6807\u4E4B\u95F4\u7684\u8DDD\u79BB\u6BD4\u548C\u6570\u636E\u4E4B\u95F4\u7684\u8DDD\u79BB\u6BD4\u5927\u81F4\u76F8\u540C\uFF0C\u5373\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>(\u76EE\u6807\u4E0B\u6807-\u6700\u5C0F\u4E0B\u6807) / (\u6700\u5927\u4E0B\u6807 - \u6700\u5C0F\u4E0B\u6807) \u2248 (\u76EE\u6807\u503C - \u6700\u5C0F\u503C) / (\u6700\u5927\u503C - \u6700\u5C0F\u503C)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u56E0\u6B64\u53EF\u4EE5\u7B97\u51FA\u5927\u81F4\u7684\u4E0B\u6807\u843D\u70B9\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>\u76EE\u6807\u4E0B\u6807 \u2248 (\u76EE\u6807\u503C - \u6700\u5C0F\u503C) / (\u6700\u5927\u503C - \u6700\u5C0F\u503C) * (\u6700\u5927\u4E0B\u6807 - \u6700\u5C0F\u4E0B\u6807) + \u6700\u5C0F\u4E0B\u6807
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u8FD9\u6837\u5C31\u53EF\u4EE5\u8BA1\u7B97\u51FA\u5927\u81F4\u7684\u4E0B\u6807\u843D\u70B9\uFF0C\u540E\u7EED\u7684\u6BD4\u8F83\u548C\u4E8C\u5206\u67E5\u627E\u4E00\u6837\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u63D2\u503C\u67E5\u627E</span>
<span class="token keyword">function</span> <span class="token function">interpolationSearch</span><span class="token punctuation">(</span><span class="token parameter">list<span class="token punctuation">,</span> target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token operator">!</span>target<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span>
 <span class="token keyword">function</span> <span class="token function">_interpolationSearch</span><span class="token punctuation">(</span><span class="token parameter">left<span class="token punctuation">,</span> right</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>left <span class="token operator">===</span> right <span class="token operator">&amp;&amp;</span> list<span class="token punctuation">[</span>left<span class="token punctuation">]</span> <span class="token operator">!==</span> target<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>left <span class="token operator">&gt;</span> right <span class="token operator">||</span> left <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> right <span class="token operator">&gt;</span> list<span class="token punctuation">.</span>lenght <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span>
  <span class="token comment">// \u8BA1\u7B97\u5927\u81F4\u4E0B\u6807\u843D\u70B9</span>
  <span class="token keyword">const</span> mid <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>
   <span class="token punctuation">(</span><span class="token punctuation">(</span>target <span class="token operator">-</span> list<span class="token punctuation">[</span>left<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span>list<span class="token punctuation">[</span>right<span class="token punctuation">]</span> <span class="token operator">-</span> list<span class="token punctuation">[</span>left<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">*</span>
    <span class="token punctuation">(</span>right <span class="token operator">-</span> left<span class="token punctuation">)</span> <span class="token operator">+</span>
    left
  <span class="token punctuation">)</span>
  <span class="token comment">// \u9A8C\u8BC1mid\u7684\u8303\u56F4</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>mid <span class="token operator">&lt;</span> left <span class="token operator">||</span> mid <span class="token operator">&gt;</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>list<span class="token punctuation">[</span>mid<span class="token punctuation">]</span> <span class="token operator">===</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token keyword">return</span> <span class="token boolean">true</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>list<span class="token punctuation">[</span>mid<span class="token punctuation">]</span> <span class="token operator">&gt;</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token keyword">return</span> <span class="token function">_interpolationSearch</span><span class="token punctuation">(</span>left<span class="token punctuation">,</span> mid <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
   <span class="token keyword">return</span> <span class="token function">_interpolationSearch</span><span class="token punctuation">(</span>mid <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> right<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
 <span class="token punctuation">}</span>
 <span class="token keyword">return</span> <span class="token function">_interpolationSearch</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> list<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">interpolationSearch</span><span class="token punctuation">(</span>list<span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">interpolationSearch</span><span class="token punctuation">(</span>list<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,45),e=[o];function c(l,i){return s(),a("div",null,e)}var k=n(t,[["render",c],["__file","sort_search.html.vue"]]);export{k as default};
