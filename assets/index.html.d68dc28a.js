import{_ as t,o as p,c as o,a as s,b as n,d as e,e as c,r as l}from"./app.907eeeb1.js";const i={},r=c(`<h1 id="typescript" tabindex="-1"><a class="header-anchor" href="#typescript" aria-hidden="true">#</a> TypeScript</h1><p>\u672C\u6587\u662F\u6211\u5728\u5B66\u4E60 <code>TypeScript</code> \u8FC7\u7A0B\u4E2D\u7684\u4E00\u4E9B\u77E5\u8BC6\u70B9\u7684\u8BB0\u5F55</p><h2 id="typescript-\u6570\u636E\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#typescript-\u6570\u636E\u7C7B\u578B" aria-hidden="true">#</a> TypeScript \u6570\u636E\u7C7B\u578B</h2><h3 id="\u57FA\u672C\u6570\u636E\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u57FA\u672C\u6570\u636E\u7C7B\u578B" aria-hidden="true">#</a> \u57FA\u672C\u6570\u636E\u7C7B\u578B</h3><ul><li><code>number</code></li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u6570\u503C\u9ED8\u8BA4\u901A\u4E3A number \u7C7B\u578B</span>
<span class="token keyword">let</span> num <span class="token operator">=</span> <span class="token number">25</span> <span class="token comment">// \u6574\u6570 \u7B49\u4EF7\u4E0E let num:number = 25</span>
<span class="token keyword">let</span> flo<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">25.5</span> <span class="token comment">// \u6D6E\u70B9\u6570</span>
<span class="token keyword">let</span> hex<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">0xa05</span> <span class="token comment">// \u5341\u516D\u8FDB\u5236</span>
<span class="token keyword">let</span> binary<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">0b1001</span> <span class="token comment">// \u4E8C\u8FDB\u5236</span>
<span class="token keyword">let</span> octal<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">0o751</span> <span class="token comment">// \u516B\u8FDB\u5236</span>
<span class="token comment">// \u9519\u8BEF\u793A\u4F8B</span>
<span class="token comment">// num = &#39;25&#39; // \u9519\u8BEF\uFF1A\u4E0D\u80FD\u5C06 string \u8D4B\u503C\u7ED9\u539F\u6709 number \u7C7B\u578B\u7684\u53D8\u91CF num</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>string</code></li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">let</span> str<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">=</span> <span class="token string">&#39;Hello World!&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><code>boolean</code></li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">let</span> isLogin<span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token operator">=</span> <span class="token boolean">false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><code>function</code></li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u8FD4\u56DE\u503C\u7C7B\u578B</span>
<span class="token keyword">function</span> <span class="token function">returnStr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>
 <span class="token keyword">return</span> <span class="token string">&#39;Hello World!&#39;</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> returnNum <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=&gt;</span> <span class="token number">222</span>
<span class="token keyword">let</span> returnBool <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token operator">=&gt;</span> <span class="token boolean">false</span>
<span class="token keyword">let</span> returnAny <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">any</span> <span class="token operator">=&gt;</span> <span class="token string">&#39;string&#39;</span> <span class="token operator">||</span> <span class="token number">111</span> <span class="token operator">||</span> <span class="token boolean">false</span>

<span class="token comment">// \u8FD4\u56DE\u7A7A</span>
<span class="token keyword">let</span> returnVoid <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token comment">// \u6307\u5B9A\u53C2\u6570\u7C7B\u578B</span>
<span class="token keyword">let</span> sumValue <span class="token operator">=</span> <span class="token punctuation">(</span>n1<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> n2<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=&gt;</span> n1 <span class="token operator">+</span> n2
<span class="token keyword">let</span> strValue <span class="token operator">=</span> <span class="token punctuation">(</span>v1<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> v2<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">=&gt;</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>v1<span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>v2<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>

<span class="token comment">// \u6307\u5B9A\u51FD\u6570\u7684\u8FD4\u56DE\u503C\u7C7B\u578B\u540E\uFF0C\u5C31\u662F\u5C06\u63A5\u53D7\u51FD\u6570\u8FD4\u56DE\u503C\u7684\u53D8\u91CF\u7684\u7C7B\u578B\u8BBE\u7F6E\u4E3A\u8FD4\u56DE\u503C\u7C7B\u578B\uFF0C</span>
<span class="token comment">// \u6B64\u65F6\u8BE5\u51FD\u6570\u8868\u8FBE\u5F0F\u53D8\u91CF\u4E0D\u53EF\u518D\u88AB\u4FEE\u6539\u4E3A\u5176\u4ED6\u7C7B\u578B\u7684\u503C\uFF0C\u4F8B\uFF1A</span>
<span class="token keyword">let</span> returnNumber <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=&gt;</span> <span class="token number">111</span>
<span class="token comment">// returnNumber = &#39;string&#39; // \u9519\u8BEF\uFF0C\u4E0D\u80FD\u5C06\u7C7B\u578B string \u8D4B\u503C\u7ED9 number</span>
<span class="token comment">// returnNumber = ():void =&gt; {}   // \u9519\u8BEF\uFF0C\u4E0D\u80FD\u5C06 void \u8D4B\u503C\u7ED9number</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>null</code> \u548C <code>undefined</code></li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u975E\u4E25\u683C\u6A21\u5F0F\u4E0B\u53EF\u4EE5\u7ED9\u4EFB\u4F55\u7C7B\u578B\u8D4B\u503C\u4E3A null \u6216 undefined</span>
<span class="token comment">// \u4E25\u683C\u6A21\u5F0F\u4E0B\u53EA\u6709 null \u548C undefined \u53EF\u4EE5\u4E92\u76F8\u8D4B\u503C</span>
<span class="token keyword">let</span> myValue <span class="token operator">=</span> <span class="token number">10</span>
myValue <span class="token operator">=</span> <span class="token keyword">null</span>
myValue <span class="token operator">=</span> <span class="token keyword">undefined</span>
<span class="token comment">// \u4F46\u662F\u5DF2\u7ECF\u58F0\u660E\u4E86\u7C7B\u578B\u7684 null \u548C undefined \u53EA\u80FD\u8D4B\u503C\u4E3A\u5404\u81EA\u672C\u8EAB</span>
<span class="token keyword">let</span> myValue<span class="token operator">:</span> <span class="token keyword">null</span> <span class="token operator">=</span> <span class="token keyword">null</span>
<span class="token comment">// myValue = undefined;    // \u9519\u8BEF</span>
<span class="token keyword">let</span> myValue2<span class="token operator">:</span> <span class="token keyword">undefined</span> <span class="token operator">=</span> <span class="token keyword">undefined</span>
<span class="token comment">// myValue2 = null // \u9519\u8BEF</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>unknown</code> \u4E0E <code>any</code></li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// any \u7C7B\u578B\u53EF\u4EE5\u8D4B\u7ED9\u4EFB\u4F55\u7C7B\u578B\uFF0Cunknown \u7C7B\u578B\u53EA\u80FD\u8D4B\u503C\u7ED9 any | unknown</span>
<span class="token keyword">let</span> notSure<span class="token operator">:</span> <span class="token builtin">unknown</span> <span class="token operator">=</span> <span class="token number">11</span>
notSure <span class="token operator">=</span> <span class="token string">&#39;11&#39;</span>
notSure <span class="token operator">=</span> <span class="token boolean">false</span>
<span class="token comment">// let strVal: string = notSure // Error \u4E0D\u80FD\u5C06\u7C7B\u578B\u201Cunknown\u201D\u5206\u914D\u7ED9\u7C7B\u578B\u201Cstring\u201D\u3002ts(2322)</span>
<span class="token keyword">let</span> anyVal<span class="token operator">:</span> <span class="token builtin">any</span> <span class="token operator">=</span> notSure
<span class="token keyword">let</span> numVal<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> anyVal <span class="token comment">// \u6B63\u786E</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6570\u7EC4\u3001\u5143\u7EC4\u3001\u679A\u4E3E\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4\u3001\u5143\u7EC4\u3001\u679A\u4E3E\u7C7B\u578B" aria-hidden="true">#</a> \u6570\u7EC4\u3001\u5143\u7EC4\u3001\u679A\u4E3E\u7C7B\u578B</h3><ul><li>\u6570\u7EC4</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// string \u6570\u7EC4</span>
<span class="token keyword">let</span> names<span class="token operator">:</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;henry&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;bucky&#39;</span><span class="token punctuation">]</span> <span class="token comment">// \u7B49\u4EF7\u4E8E let names: string[] = [&#39;henry&#39;, &#39;bucky&#39;]</span>
<span class="token comment">// number \u6570\u7EC4</span>
<span class="token keyword">let</span> numbers<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span> <span class="token comment">// \u7B49\u4EF7\u4E8E let numbers: Array&lt;number&gt; = [1, 2, 3]</span>
<span class="token comment">// any \u6570\u7EC4</span>
<span class="token keyword">let</span> anys<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
anys<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;string&#39;</span>
anys<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">111</span>
anys<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u5143\u7EC4</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u89C4\u5B9A\u4E86\u6570\u7EC4\u4E2D\u7C7B\u578B\u7684\u987A\u5E8F</span>
<span class="token keyword">let</span> colors<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">number</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">,</span> <span class="token number">111</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>enum</code> \u679A\u4E3E\u7C7B\u578B</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">enum</span> Color <span class="token punctuation">{</span>
 Black<span class="token punctuation">,</span> <span class="token comment">// 0</span>
 Yellow<span class="token punctuation">,</span> <span class="token comment">// 1</span>
 Red<span class="token punctuation">,</span> <span class="token comment">// 2</span>
 Green <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">,</span>
 Blue <span class="token comment">// 101</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> myColor<span class="token operator">:</span> Color <span class="token operator">=</span> Color<span class="token punctuation">.</span>Blue
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Color<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u8054\u5408\u7C7B\u578B\u3001\u68C0\u67E5\u7C7B\u578B\u3001\u6269\u5C55\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u8054\u5408\u7C7B\u578B\u3001\u68C0\u67E5\u7C7B\u578B\u3001\u6269\u5C55\u7C7B\u578B" aria-hidden="true">#</a> \u8054\u5408\u7C7B\u578B\u3001\u68C0\u67E5\u7C7B\u578B\u3001\u6269\u5C55\u7C7B\u578B</h3><ul><li>\u8054\u5408\u7C7B\u578B\uFF08\u4F7F\u7528 <code>|</code> \u7B26\u53F7\uFF08\u300C\u6216\u300D\u7B26\u53F7\uFF09\uFF09</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>unionType <span class="token operator">=</span> <span class="token string">&#39;Hello, World&#39;</span>
unionType <span class="token operator">=</span> <span class="token number">12</span>
unionType <span class="token operator">=</span> <span class="token boolean">true</span>
<span class="token comment">// unionType = {}  // \u9519\u8BEF\uFF0C\u53EA\u80FD\u662F string\u3001number\u3001boolean \u4E2D\u7684\u4E00\u79CD\u7C7B\u578B</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u68C0\u67E5\u7C7B\u578B <code>typeof</code></li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">let</span> checkType <span class="token operator">=</span> <span class="token number">10</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> checkType <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">)</span> <span class="token comment">// false</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> checkType <span class="token operator">===</span> <span class="token string">&#39;number&#39;</span><span class="token punctuation">)</span> <span class="token comment">// true // \u975E\u4E25\u683C\u6A21\u5F0F\u62A5\u9519</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u6269\u5C55\u7C7B\u578B <code>&amp;</code></li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">PersonBasicType</span> <span class="token punctuation">{</span>
 name<span class="token operator">:</span> <span class="token builtin">string</span>
 age<span class="token operator">:</span> <span class="token builtin">number</span>
<span class="token punctuation">}</span>
<span class="token keyword">interface</span> <span class="token class-name">Props</span> <span class="token punctuation">{</span>
 sex<span class="token operator">:</span> <span class="token builtin">string</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> formatPerson <span class="token operator">=</span> <span class="token punctuation">(</span>person<span class="token operator">:</span> Props <span class="token operator">&amp;</span> PersonBasicType<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">=&gt;</span>
 <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>person<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>person<span class="token punctuation">.</span>age<span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>person<span class="token punctuation">.</span>sex<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
<span class="token function">formatPerson</span><span class="token punctuation">(</span><span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&#39;John&#39;</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span> sex<span class="token operator">:</span> <span class="token string">&#39;male&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5BF9\u8C61\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u5BF9\u8C61\u7C7B\u578B" aria-hidden="true">#</a> \u5BF9\u8C61\u7C7B\u578B</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u7B80\u5355\u5BF9\u8C61</span>
<span class="token keyword">let</span> obj<span class="token operator">:</span> <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span> age<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
 name<span class="token operator">:</span> <span class="token string">&#39;qiuxc&#39;</span><span class="token punctuation">,</span>
 age<span class="token operator">:</span> <span class="token number">12</span>
<span class="token punctuation">}</span>
<span class="token comment">/*
obj = {
    aaa: &#39;ss&#39;,
    bbb: 234
}  // \u9519\u8BEF\uFF0C\u53C2\u6570\u5FC5\u987B\u662F name \u548C age\uFF0C\u5373\u4F7F\u662F\u5BF9\u5E94\u7684\u7C7B\u578B\uFF0C\u4E0D\u540C\u7684\u53D8\u91CF\u540D\u4E5F\u4E0D\u53EF\u4EE5
 */</span>
obj <span class="token operator">=</span> <span class="token punctuation">{</span>
 name<span class="token operator">:</span> <span class="token string">&#39;summer&#39;</span><span class="token punctuation">,</span>
 age<span class="token operator">:</span> <span class="token number">18</span>
<span class="token punctuation">}</span> <span class="token comment">// \u6B63\u786E</span>
<span class="token comment">// \u590D\u6742\u5BF9\u8C61</span>
<span class="token keyword">let</span> complexObj<span class="token operator">:</span> <span class="token punctuation">{</span> data<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token function-variable function">func</span><span class="token operator">:</span> <span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
 data<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
 <span class="token function">func</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>data
 <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>complexObj<span class="token punctuation">.</span><span class="token function">func</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// [1, 2, 3, 4]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="type-\u5173\u952E\u5B57\u58F0\u660E\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#type-\u5173\u952E\u5B57\u58F0\u660E\u7C7B\u578B" aria-hidden="true">#</a> <code>type</code> \u5173\u952E\u5B57\u58F0\u660E\u7C7B\u578B</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">myType</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
 data<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
 <span class="token function-variable function">myFunc</span><span class="token operator">:</span> <span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> complexObj2<span class="token operator">:</span> myType <span class="token operator">=</span> <span class="token punctuation">{</span>
 data<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
 <span class="token function">myFunc</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>data
 <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>complexObj2<span class="token punctuation">.</span><span class="token function">myFunc</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// [1, 2, 3, 4]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="class\u7C7B\u3001interface\u63A5\u53E3\u3001implements\u5173\u952E\u5B57\u3001\u62BD\u8C61\u7C7B" tabindex="-1"><a class="header-anchor" href="#class\u7C7B\u3001interface\u63A5\u53E3\u3001implements\u5173\u952E\u5B57\u3001\u62BD\u8C61\u7C7B" aria-hidden="true">#</a> <code>class</code>\u7C7B\u3001<code>interface</code>\u63A5\u53E3\u3001<code>implements</code>\u5173\u952E\u5B57\u3001\u62BD\u8C61\u7C7B</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">Alarm</span> <span class="token punctuation">{</span>
 <span class="token function">alert</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>
<span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">Door</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token comment">// SecurityDoor \u7C7B\u7EE7\u627F Door \u7C7B\u5E76\u4F7F\u7528 implements \u4E3A SecurityDoor \u7C7B\u62D3\u5C55\u65B9\u6CD5</span>
<span class="token keyword">class</span> <span class="token class-name">SecurityDoor</span> <span class="token keyword">extends</span> <span class="token class-name">Door</span> <span class="token keyword">implements</span> <span class="token class-name">Alarm</span> <span class="token punctuation">{</span>
 <span class="token function">alert</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u9632\u76D7\u95E8\u7684\u62A5\u8B66\u529F\u80FD&#39;</span><span class="token punctuation">)</span>
 <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">Car</span> <span class="token keyword">implements</span> <span class="token class-name">Alarm</span> <span class="token punctuation">{</span>
 <span class="token function">alert</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u8F66\u7684\u62A5\u8B66\u529F\u80FD&#39;</span><span class="token punctuation">)</span>
 <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u63A5\u53E3\u7EE7\u627F\u7C7B</span>
<span class="token keyword">class</span> <span class="token class-name">Ponit</span> <span class="token punctuation">{</span>
 x<span class="token operator">:</span> <span class="token builtin">number</span>
 y<span class="token operator">:</span> <span class="token builtin">number</span>
 <span class="token function">constructor</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">=</span> x
  <span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">=</span> y
 <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">interface</span> <span class="token class-name">Ponit3d</span> <span class="token keyword">extends</span> <span class="token class-name">Ponit</span> <span class="token punctuation">{</span>
 z<span class="token operator">:</span> <span class="token builtin">number</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> ponit<span class="token operator">:</span> Ponit3d <span class="token operator">=</span> <span class="token punctuation">{</span> x<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> z<span class="token operator">:</span> <span class="token number">3</span> <span class="token punctuation">}</span>

<span class="token comment">// \u62BD\u8C61\u7C7B</span>
<span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>
 <span class="token keyword">public</span> name<span class="token operator">:</span> <span class="token builtin">string</span>
 <span class="token keyword">protected</span> age<span class="token operator">:</span> <span class="token builtin">number</span>
 <span class="token keyword">public</span> <span class="token function">constructor</span><span class="token punctuation">(</span>name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name
  <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age
 <span class="token punctuation">}</span>
 <span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token function">sayHi</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">Man</span> <span class="token keyword">extends</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>
 <span class="token function">sayHi</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Hi, my name is &#39;</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span>
 <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> jonny<span class="token operator">:</span> Man <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Man</span><span class="token punctuation">(</span><span class="token string">&#39;Jonny&#39;</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span>
jonny<span class="token punctuation">.</span><span class="token function">sayHi</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u6CDB\u578B" tabindex="-1"><a class="header-anchor" href="#\u6CDB\u578B" aria-hidden="true">#</a> \u6CDB\u578B</h2><p>\u6CDB\u578B\u53EF\u4EE5\u63A5\u53D7\u4E00\u4E9B\u7C7B\u578B\u53C2\u6570\uFF0C\u8BA9<code>ts</code>\u81EA\u5DF1\u63A8\u5BFC\u51FA\u60F3\u8981\u7684\u7C7B\u578B\u3002\u901A\u8FC7\u4F7F\u7528\u6CDB\u578B\uFF0C\u53EF\u4EE5\u4F7F\u7C7B\u578B\u58F0\u660E\u53D8\u5F97\u66F4\u52A0\u7075\u6D3B</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u58F0\u660E\u6CDB\u578B\u51FD\u6570</span>
<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">createArray</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>length<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
 <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Array</span></span><span class="token punctuation">(</span>length<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// Array&lt;string&gt;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token generic-function"><span class="token function">createArray</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token string">&#39;qxc&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//[ &#39;qxc&#39;, &#39;qxc&#39;, &#39;qxc&#39;, &#39;qxc&#39;, &#39;qxc&#39; ]</span>

<span class="token comment">// // Array&lt;number&gt;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token generic-function"><span class="token function">createArray</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//[ 6, 6, 6, 6, 6 ]</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">createArray</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token string">&#39;6&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//[ &#39;6&#39;, &#39;6&#39;, &#39;6&#39;, &#39;6&#39;, &#39;6&#39; ]</span>

<span class="token comment">// \u591A\u4E2A\u7C7B\u578B\u53C2\u6570</span>
<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">swap</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">U</span><span class="token punctuation">,</span> <span class="token constant">A</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>tuple<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">U</span><span class="token punctuation">,</span> <span class="token constant">A</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token constant">A</span><span class="token punctuation">,</span> <span class="token constant">U</span><span class="token punctuation">,</span> <span class="token constant">T</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
 <span class="token keyword">return</span> <span class="token punctuation">[</span>tuple<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> tuple<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> tuple<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
<span class="token comment">// [boolean, string, number]</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">swap</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// [true, &#39;1&#39;, 1]</span>

<span class="token comment">// \u6CDB\u578B\u53C2\u6570\u7EA6\u675F</span>
<span class="token keyword">interface</span> <span class="token class-name">Lengthwise</span> <span class="token punctuation">{</span>
 length<span class="token operator">:</span> <span class="token builtin">number</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">getLength</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> Lengthwise<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">{</span>
 <span class="token keyword">return</span> value<span class="token punctuation">.</span>length
<span class="token punctuation">}</span>
<span class="token function">getLength</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// 3</span>

<span class="token comment">// \u6CDB\u578B\u63A5\u53E3-\u51FD\u6570</span>
<span class="token keyword">interface</span> <span class="token class-name">ValueArray</span> <span class="token punctuation">{</span>
 <span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>Value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> ValueArray<span class="token operator">:</span> ValueArray
ValueArray <span class="token operator">=</span> <span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>val<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Array</span></span><span class="token punctuation">(</span>val<span class="token punctuation">)</span>

<span class="token comment">// \u6CDB\u578B\u7C7B</span>
<span class="token keyword">class</span> <span class="token class-name">GenericValue<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
 value<span class="token operator">:</span> <span class="token constant">T</span>
 <span class="token function">joint</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">[</span>x<span class="token punctuation">,</span> y<span class="token punctuation">]</span>
 <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6CDB\u578B\u53C2\u6570\u9ED8\u8BA4\u7C7B\u578B</span>
<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">temp</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token operator">=</span> <span class="token builtin">string</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>name<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token punctuation">{</span>
 <span class="token keyword">return</span> name
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5DE5\u5177\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u5DE5\u5177\u7C7B\u578B" aria-hidden="true">#</a> \u5DE5\u5177\u7C7B\u578B</h2><p><code>ts</code> \u5185\u7F6E\u4E86\u8BB8\u591A\u5DE5\u5177\u7C7B\u578B\uFF0C\u4F7F\u7528\u8FD9\u4E9B\u5DE5\u5177\u7C7B\u578B\u53EF\u4EE5\u5F88\u65B9\u4FBF\u7684\u5B9E\u73B0\u6211\u4EEC\u60F3\u8981\u7684\u529F\u80FD</p><h3 id="\u6CDB\u578B\u76F8\u5173\u5DE5\u5177\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u6CDB\u578B\u76F8\u5173\u5DE5\u5177\u7C7B\u578B" aria-hidden="true">#</a> \u6CDB\u578B\u76F8\u5173\u5DE5\u5177\u7C7B\u578B</h3><h4 id="typeof-\u83B7\u53D6\u7C7B\u578B-\u83B7\u53D6\u6307\u5B9A\u53D8\u91CF\u7684\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#typeof-\u83B7\u53D6\u7C7B\u578B-\u83B7\u53D6\u6307\u5B9A\u53D8\u91CF\u7684\u7C7B\u578B" aria-hidden="true">#</a> <code>typeof</code> \u83B7\u53D6\u7C7B\u578B \u83B7\u53D6\u6307\u5B9A\u53D8\u91CF\u7684\u7C7B\u578B</h4><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">PersonBasicType</span> <span class="token punctuation">{</span>
 name<span class="token operator">:</span> <span class="token builtin">string</span>
 age<span class="token operator">:</span> <span class="token builtin">number</span>
<span class="token punctuation">}</span>
<span class="token keyword">interface</span> <span class="token class-name">Props</span> <span class="token punctuation">{</span>
 sex<span class="token operator">:</span> <span class="token builtin">string</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> formatPerson <span class="token operator">=</span> <span class="token punctuation">(</span>person<span class="token operator">:</span> Props <span class="token operator">&amp;</span> PersonBasicType<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">=&gt;</span>
 <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>person<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>person<span class="token punctuation">.</span>age<span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>person<span class="token punctuation">.</span>sex<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>

<span class="token keyword">type</span> <span class="token class-name">formatPersonType</span> <span class="token operator">=</span> <span class="token keyword">typeof</span> formatPerson
<span class="token comment">// type formatPersonType = (person: Props &amp; PropsType) =&gt; string</span>

<span class="token keyword">const</span> people<span class="token operator">:</span> PersonBasicType <span class="token operator">&amp;</span> Props <span class="token operator">=</span> <span class="token punctuation">{</span>
 name<span class="token operator">:</span> <span class="token string">&#39;qiuxc&#39;</span><span class="token punctuation">,</span>
 age<span class="token operator">:</span> <span class="token number">21</span><span class="token punctuation">,</span>
 sex<span class="token operator">:</span> <span class="token string">&#39;male&#39;</span>
<span class="token punctuation">}</span>
<span class="token keyword">type</span> <span class="token class-name">PersonFullType</span> <span class="token operator">=</span> <span class="token keyword">typeof</span> people
<span class="token keyword">const</span> newPeople<span class="token operator">:</span> PersonFullType <span class="token operator">=</span> <span class="token punctuation">{</span>
 name<span class="token operator">:</span> <span class="token string">&#39;Sunny&#39;</span><span class="token punctuation">,</span>
 age<span class="token operator">:</span> <span class="token number">28</span><span class="token punctuation">,</span>
 sex<span class="token operator">:</span> <span class="token string">&#39;woman&#39;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="keyof-\u83B7\u53D6\u67D0\u79CD\u7C7B\u578B\u7684\u6240\u6709\u952E-\u8FD4\u56DE\u7684\u662F\u8054\u5408\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#keyof-\u83B7\u53D6\u67D0\u79CD\u7C7B\u578B\u7684\u6240\u6709\u952E-\u8FD4\u56DE\u7684\u662F\u8054\u5408\u7C7B\u578B" aria-hidden="true">#</a> <code>keyof</code> \u83B7\u53D6\u67D0\u79CD\u7C7B\u578B\u7684\u6240\u6709\u952E\uFF0C\u8FD4\u56DE\u7684\u662F\u8054\u5408\u7C7B\u578B</h4><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">PersonAllKeysType</span> <span class="token operator">=</span> <span class="token keyword">keyof</span> PersonFullType <span class="token comment">// name | age | sex</span>
<span class="token keyword">const</span> xq<span class="token operator">:</span> PersonAllKeysType <span class="token operator">=</span> <span class="token string">&#39;name&#39;</span>
<span class="token keyword">type</span> <span class="token class-name">StrKType</span> <span class="token operator">=</span> <span class="token keyword">keyof</span> <span class="token builtin">string</span> <span class="token comment">// &quot;toString&quot; | &quot;charAt&quot; | &quot;charCodeAt&quot; | &quot;concat&quot; | &quot;indexOf&quot; | &quot;lastIndexOf&quot; | &quot;localeCompare&quot; | ...</span>
<span class="token keyword">type</span> <span class="token class-name">NumKType</span> <span class="token operator">=</span> <span class="token keyword">keyof</span> <span class="token builtin">number</span> <span class="token comment">// &quot;toString&quot; | &quot;toFixed&quot; | &quot;toExponential&quot; | &quot;toPrecision&quot; | &quot;valueOf&quot; | &quot;toLocaleString&quot;</span>
<span class="token keyword">type</span> <span class="token class-name">BooKtype</span> <span class="token operator">=</span> <span class="token keyword">keyof</span> <span class="token builtin">boolean</span> <span class="token comment">// &quot;valueOf&quot;</span>

<span class="token comment">// \u4F7F\u7528 keyof \u6307\u5B9A\u53C2\u6570\u7C7B\u578B</span>
<span class="token keyword">const</span> getProps <span class="token operator">=</span> <span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name">object</span><span class="token punctuation">,</span> <span class="token constant">K</span> <span class="token keyword">extends</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>obj<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token constant">K</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">K</span><span class="token punctuation">]</span> <span class="token operator">=&gt;</span>
 obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
<span class="token function">getProps</span><span class="token punctuation">(</span>newPeople<span class="token punctuation">,</span> <span class="token string">&#39;age&#39;</span><span class="token punctuation">)</span> <span class="token comment">// &lt;PersonBasicType &amp; Props, &quot;age&quot;&gt;(obj: PersonBasicType &amp; Props, key: &quot;age&quot;) =&gt; number</span>
<span class="token function">getProps</span><span class="token punctuation">(</span>newPeople<span class="token punctuation">,</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">)</span> <span class="token comment">// &lt;PersonBasicType &amp; Props, &quot;name&quot;&gt;(obj: PersonBasicType &amp; Props, key: &quot;name&quot;) =&gt; string</span>
<span class="token function">getProps</span><span class="token punctuation">(</span>newPeople<span class="token punctuation">,</span> <span class="token string">&#39;sex&#39;</span><span class="token punctuation">)</span> <span class="token comment">// &lt;PersonBasicType &amp; Props, &quot;sex&quot;&gt;(obj: PersonBasicType &amp; Props, key: &quot;sex&quot;) =&gt; string</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="in-\u7528\u6765\u904D\u5386\u679A\u4E3E\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#in-\u7528\u6765\u904D\u5386\u679A\u4E3E\u7C7B\u578B" aria-hidden="true">#</a> <code>in</code> \u7528\u6765\u904D\u5386\u679A\u4E3E\u7C7B\u578B</h4><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Keys</span> <span class="token operator">=</span> <span class="token string">&#39;a&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;b&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;c&#39;</span>
<span class="token keyword">type</span> <span class="token class-name">Obj</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
 <span class="token punctuation">[</span>k <span class="token keyword">in</span> Keys<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">any</span>
<span class="token punctuation">}</span> <span class="token comment">// type Obj = { a: any; b: any; c: any; }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="infer-\u58F0\u660E\u4E00\u4E2A\u7C7B\u578B\u53D8\u91CF\u5E76\u4E14\u5BF9\u5B83\u8FDB\u884C\u4F7F\u7528" tabindex="-1"><a class="header-anchor" href="#infer-\u58F0\u660E\u4E00\u4E2A\u7C7B\u578B\u53D8\u91CF\u5E76\u4E14\u5BF9\u5B83\u8FDB\u884C\u4F7F\u7528" aria-hidden="true">#</a> <code>infer</code> \u58F0\u660E\u4E00\u4E2A\u7C7B\u578B\u53D8\u91CF\u5E76\u4E14\u5BF9\u5B83\u8FDB\u884C\u4F7F\u7528</h4><p><code>infer</code> \u53EF\u4EE5\u83B7\u53D6\u4E00\u4E2A\u7C7B\u578B\u3002</p><p><code>infer</code> \u83B7\u53D6\u51FD\u6570\u8FD4\u56DE\u503C\u7C7B\u578B\uFF1A</p><ul><li><code>T extends () =&gt; infer R</code> \u662F\u4E00\u4E2A\u8868\u8FBE\u5F0F\uFF0C\u8FD4\u56DE\u5E03\u5C14\u503C\uFF0C\u901A\u5E38\u914D\u5408\u4E09\u76EE\u8FD0\u7B97\u7B26\u4F7F\u7528\u3002\u8868\u793A\u6CDB\u578B\u53C2\u6570 <code>T</code> \u662F\u5426\u517C\u5BB9\uFF08\u5305\u542B\u4F46\u4E0D\u9650\u4E8E\uFF09<code>() =&gt; infer R</code>\uFF0C\u8FD9\u91CC\u5C06\u51FD\u6570\u7C7B\u578B\u7684\u8FD4\u56DE\u503C\u7528 <code>infer R</code> \u6536\u96C6\u4E86\u8D77\u6765\u3002</li><li><code>? R : T</code> \u8868\u793A\u5982\u679C\u524D\u9762\u7684\u4E09\u76EE\u8868\u8FBE\u5F0F\u6210\u7ACB\uFF0C\u5219\u8FD4\u56DE\u6536\u96C6\u4E86\u51FD\u6570\u8FD4\u56DE\u503C\u7C7B\u578B\u7684 <code>R</code>\uFF0C\u5426\u5219\u8FD4\u56DE\u4F20\u5165\u7684\u6CDB\u578B\u53C2\u6570 <code>T</code>\u3002</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u83B7\u53D6\u51FD\u6570\u8FD4\u56DE\u503C\u7C7B\u578B</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">RT</span><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">infer</span> <span class="token constant">R</span> <span class="token operator">?</span> <span class="token constant">R</span> <span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">rs</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token string">&#39;abc&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">RSRT</span></span> <span class="token operator">=</span> <span class="token constant">RT</span><span class="token operator">&lt;</span><span class="token keyword">typeof</span> rs<span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// type RSRT = string\uFF08\u83B7\u53D6\u5230\u51FD\u6570 rs \u7684\u8FD4\u56DE\u503C\u7C7B\u578B\u4E3A string\uFF09</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>infer</code> \u83B7\u53D6\u51FD\u6570\u53C2\u6570\u5217\u8868\u7C7B\u578B\uFF1A</p><ul><li><code>T extends (...args: infer P) =&gt; any</code> \u4ECD\u7136\u662F\u8868\u8FBE\u5F0F\uFF0C\u56E0\u4E3A\u51FD\u6570\u53EF\u80FD\u4F1A\u6709\u591A\u4E2A\u53C2\u6570\uFF0C\u6240\u4EE5\u6211\u4EEC\u8981\u4F7F\u7528 <code>...args: infer P</code> \u6765\u6536\u96C6\u53C2\u6570\u5217\u8868\u7684\u7C7B\u578B\uFF1B\u5982\u679C\u53EA\u662F\u4F7F\u7528 <code>arg: infer P</code> \uFF0C\u5728\u6709\u591A\u4E2A\u53C2\u6570\u65F6\u4F1A\u5BFC\u81F4\u8868\u8FBE\u5F0F\u5931\u8D25\uFF0C\u4ECE\u800C\u8FD4\u56DE\u6211\u4EEC\u610F\u6599\u4E4B\u5916\u7684\u7ED3\u679C\uFF1B</li><li><code>? P : any</code> \u8868\u793A\u5982\u679C\u524D\u9762\u7684\u4E09\u76EE\u8868\u8FBE\u5F0F\u6210\u7ACB\uFF0C\u5219\u8FD4\u56DE\u6536\u96C6\u4E86\u51FD\u6570\u8FD4\u56DE\u503C\u7C7B\u578B\u7684 <code>P</code>\uFF0C\u5426\u5219\u8FD4\u56DE <code>any</code>\u3002</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u83B7\u53D6\u51FD\u6570\u53C2\u6570\u7C7B\u578B</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">PT</span><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token keyword">infer</span> <span class="token constant">P</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">any</span> <span class="token operator">?</span> <span class="token constant">P</span> <span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">ps1</span> <span class="token operator">=</span> <span class="token punctuation">(</span>str<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> str<span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">PS1PT</span></span> <span class="token operator">=</span> <span class="token constant">PT</span><span class="token operator">&lt;</span><span class="token keyword">typeof</span> ps1<span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// type PS1PT = [str: string]\uFF08\u83B7\u53D6\u5230 ps1 \u51FD\u6570\u7684\u53C2\u6570\u7C7B\u578B\u4E3A [str: string]\uFF09</span>
<span class="token keyword">const</span> <span class="token function-variable function">ps2</span> <span class="token operator">=</span> <span class="token punctuation">(</span>a<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> b<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a <span class="token operator">+</span> b<span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">PS2PT</span></span> <span class="token operator">=</span> <span class="token constant">PT</span><span class="token operator">&lt;</span><span class="token keyword">typeof</span> ps2<span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// type PS2PT = [a: number, b: number]\uFF08\u83B7\u53D6\u5230 ps2 \u51FD\u6570\u7684\u53C2\u6570\u7C7B\u578B\u4E3A [a: number, b: number]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="extends-\u6DFB\u52A0\u6CDB\u578B\u7EA6\u675F" tabindex="-1"><a class="header-anchor" href="#extends-\u6DFB\u52A0\u6CDB\u578B\u7EA6\u675F" aria-hidden="true">#</a> <code>extends</code> \u6DFB\u52A0\u6CDB\u578B\u7EA6\u675F</h4><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> logging <span class="token operator">=</span> <span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token punctuation">{</span> a<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">;</span> b<span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>val<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token operator">=&gt;</span> <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="\u7D22\u5F15\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u7D22\u5F15\u7C7B\u578B" aria-hidden="true">#</a> \u7D22\u5F15\u7C7B\u578B</h4><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u5728\u5BF9\u8C61\u4E2D\u83B7\u53D6\u4E00\u4E9B\u5C5E\u6027\u7684\u503C\uFF0C\u7136\u540E\u5EFA\u7ACB\u5BF9\u5E94\u7684\u96C6\u5408\u3002\u4E0B\u9762\u8FD9\u79CD\u5199\u6CD5\u53EF\u4EE5\u7EA6\u675F\u7B2C\u4E8C\u4E2A\u6570\u7EC4\u53C2\u6570\u4E2D\u7684\u503C</span>
<span class="token keyword">const</span> getValues <span class="token operator">=</span> <span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">K</span> <span class="token keyword">extends</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>obj<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> keys<span class="token operator">:</span> <span class="token constant">K</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">K</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=&gt;</span>
 keys<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>key<span class="token operator">:</span> <span class="token constant">K</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token function">getValues</span><span class="token punctuation">(</span><span class="token punctuation">{</span> a<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> b<span class="token operator">:</span> <span class="token string">&#39;2&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// =&gt; (string | number)[]</span>
<span class="token comment">// getValues({a: 1, b: &#39;2&#39;}, [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;]) // \u4E0D\u80FD\u5C06\u7C7B\u578B\u201C&quot;c&quot;\u201D\u5206\u914D\u7ED9\u7C7B\u578B\u201C&quot;a&quot; | &quot;b&quot;\u201D\u3002ts(2322)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u6620\u5C04\u7C7B\u578B-\u6839\u636E\u65E7\u7684\u7C7B\u578B\u521B\u5EFA\u51FA\u65B0\u7684\u7C7B\u578B-\u6211\u4EEC\u79F0\u4E4B\u4E3A\u6620\u5C04\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u6620\u5C04\u7C7B\u578B-\u6839\u636E\u65E7\u7684\u7C7B\u578B\u521B\u5EFA\u51FA\u65B0\u7684\u7C7B\u578B-\u6211\u4EEC\u79F0\u4E4B\u4E3A\u6620\u5C04\u7C7B\u578B" aria-hidden="true">#</a> \u6620\u5C04\u7C7B\u578B \u6839\u636E\u65E7\u7684\u7C7B\u578B\u521B\u5EFA\u51FA\u65B0\u7684\u7C7B\u578B, \u6211\u4EEC\u79F0\u4E4B\u4E3A\u6620\u5C04\u7C7B\u578B</h4><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">TestInterface</span> <span class="token punctuation">{</span>
 name<span class="token operator">:</span> <span class="token builtin">string</span>
 age<span class="token operator">:</span> <span class="token builtin">number</span>
<span class="token punctuation">}</span>
<span class="token keyword">type</span> <span class="token class-name">OptionalTestInterface<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
 <span class="token punctuation">[</span>k <span class="token keyword">in</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">]</span><span class="token operator">?</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span>k<span class="token punctuation">]</span>
<span class="token punctuation">}</span>
<span class="token keyword">type</span> <span class="token class-name">newTestInterface</span> <span class="token operator">=</span>
 OptionalTestInterface<span class="token operator">&lt;</span>TestInterface<span class="token operator">&gt;</span> <span class="token comment">/* type newTestInterface = {name?: string; age?: number} */</span>
<span class="token keyword">const</span> objInterface<span class="token operator">:</span> newTestInterface <span class="token operator">=</span> <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&#39;qiuxc&#39;</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">18</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5185\u7F6E\u5DE5\u5177\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u5185\u7F6E\u5DE5\u5177\u7C7B\u578B" aria-hidden="true">#</a> \u5185\u7F6E\u5DE5\u5177\u7C7B\u578B</h3><h4 id="partial-t-\u5C06\u7C7B\u578B\u7684\u5C5E\u6027\u90FD\u53D8\u6210\u53EF\u9009\u7684" tabindex="-1"><a class="header-anchor" href="#partial-t-\u5C06\u7C7B\u578B\u7684\u5C5E\u6027\u90FD\u53D8\u6210\u53EF\u9009\u7684" aria-hidden="true">#</a> <code>Partial&lt;T&gt;</code> \u5C06\u7C7B\u578B\u7684\u5C5E\u6027\u90FD\u53D8\u6210\u53EF\u9009\u7684</h4><p>\u6E90\u7801: <code>type Partial&lt;T&gt; = { [P in keyof T]?: T[P]; }</code></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>
 name<span class="token operator">:</span> <span class="token builtin">string</span>
 id<span class="token operator">:</span> <span class="token builtin">number</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> user<span class="token operator">:</span> Partial<span class="token operator">&lt;</span>User<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
 name<span class="token operator">:</span> <span class="token string">&#39;qiuxc&#39;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u4F46\u662F Partial&lt;T&gt; \u6709\u4E2A\u5C40\u9650\u6027\uFF0C\u5C31\u662F\u53EA\u652F\u6301\u5904\u7406\u7B2C\u4E00\u5C42\u7684\u5C5E\u6027\uFF0C\u5982\u679C\u8981\u5904\u7406\u591A\u5C42\uFF0C\u5C31\u53EF\u4EE5\u81EA\u5DF1\u5B9E\u73B0</span>
<span class="token keyword">type</span> <span class="token class-name">DeepPartial<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
 <span class="token punctuation">[</span>k <span class="token keyword">in</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">]</span><span class="token operator">?</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token keyword">extends</span> <span class="token class-name">object</span> <span class="token operator">?</span> DeepPartial<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token operator">&gt;</span> <span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span>k<span class="token punctuation">]</span>
<span class="token punctuation">}</span>
<span class="token keyword">interface</span> <span class="token class-name">NewUser</span> <span class="token keyword">extends</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>
 loves<span class="token operator">:</span> <span class="token punctuation">{</span>
  movie<span class="token operator">:</span> <span class="token builtin">boolean</span>
  music<span class="token operator">:</span> <span class="token builtin">boolean</span>
 <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> newUser<span class="token operator">:</span> DeepPartial<span class="token operator">&lt;</span>NewUser<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
 name<span class="token operator">:</span> <span class="token string">&#39;qiuxc&#39;</span><span class="token punctuation">,</span>
 loves<span class="token operator">:</span> <span class="token punctuation">{</span>
  movie<span class="token operator">:</span> <span class="token boolean">false</span>
 <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="required-t-\u5C06\u7C7B\u578B\u7684\u5C5E\u6027\u53D8\u6210\u5FC5\u9009" tabindex="-1"><a class="header-anchor" href="#required-t-\u5C06\u7C7B\u578B\u7684\u5C5E\u6027\u53D8\u6210\u5FC5\u9009" aria-hidden="true">#</a> <code>Required&lt;T&gt;</code> \u5C06\u7C7B\u578B\u7684\u5C5E\u6027\u53D8\u6210\u5FC5\u9009</h4><p>\u6E90\u7801: <code>type Required&lt;T&gt; = { [P in keyof T]-?: T[P] };</code> (<code>-?</code>\u8868\u793A\u53BB\u9664 <code>?</code>\u8868\u793A\u53EF\u9009)</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u793A\u4F8B\uFF1A\u5148\u5C06\u7C7B\u578B\u7684\u5C5E\u6027\u53D8\u6210\u975E\u5FC5\u9009\uFF0C\u518D\u53D8\u6210\u5FC5\u9009</span>
<span class="token keyword">type</span> <span class="token class-name">OptionalUser</span> <span class="token operator">=</span> Partial<span class="token operator">&lt;</span>User<span class="token operator">&gt;</span>
<span class="token keyword">const</span> u1<span class="token operator">:</span> OptionalUser <span class="token operator">=</span> <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&#39;John&#39;</span> <span class="token punctuation">}</span>
<span class="token keyword">type</span> <span class="token class-name">RequiredUser</span> <span class="token operator">=</span> Required<span class="token operator">&lt;</span>User<span class="token operator">&gt;</span>
<span class="token keyword">const</span> u2<span class="token operator">:</span> RequiredUser <span class="token operator">=</span> <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&#39;John&#39;</span><span class="token punctuation">}</span> <span class="token comment">// Error: \u7C7B\u578B &quot;{ name: string; }&quot; \u4E2D\u7F3A\u5C11\u5C5E\u6027 &quot;id&quot;\uFF0C\u4F46\u7C7B\u578B &quot;Required&lt;User&gt;&quot; \u4E2D\u9700\u8981\u8BE5\u5C5E\u6027</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="readonly-t-\u5C06\u67D0\u4E2A\u7C7B\u578B\u6240\u6709\u5C5E\u6027\u53D8\u4E3A\u53EA\u8BFB\u5C5E\u6027-\u4E5F\u5C31\u610F\u5473\u7740\u8FD9\u4E9B\u5C5E\u6027\u4E0D\u80FD\u88AB\u91CD\u65B0\u8D4B\u503C\u3002" tabindex="-1"><a class="header-anchor" href="#readonly-t-\u5C06\u67D0\u4E2A\u7C7B\u578B\u6240\u6709\u5C5E\u6027\u53D8\u4E3A\u53EA\u8BFB\u5C5E\u6027-\u4E5F\u5C31\u610F\u5473\u7740\u8FD9\u4E9B\u5C5E\u6027\u4E0D\u80FD\u88AB\u91CD\u65B0\u8D4B\u503C\u3002" aria-hidden="true">#</a> <code>Readonly&lt;T&gt;</code>\u5C06\u67D0\u4E2A\u7C7B\u578B\u6240\u6709\u5C5E\u6027\u53D8\u4E3A\u53EA\u8BFB\u5C5E\u6027\uFF0C\u4E5F\u5C31\u610F\u5473\u7740\u8FD9\u4E9B\u5C5E\u6027\u4E0D\u80FD\u88AB\u91CD\u65B0\u8D4B\u503C\u3002</h4><p>\u6E90\u7801: <code>type Readonly&lt;T&gt; = { readonly [k in keyof T]: T[k] }</code></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> u3<span class="token operator">:</span> Readonly<span class="token operator">&lt;</span>User<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
 name<span class="token operator">:</span> <span class="token string">&#39;qiuxc&#39;</span><span class="token punctuation">,</span>
 id<span class="token operator">:</span> <span class="token number">18</span>
<span class="token punctuation">}</span>
<span class="token comment">// u3.id = 11 // Error: \u65E0\u6CD5\u5206\u914D\u5230 &quot;id&quot; \uFF0C\u56E0\u4E3A\u5B83\u662F\u53EA\u8BFB\u5C5E\u6027\u3002ts(2540)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="pick-t-k-extends-keyof-t-\u4ECE\u67D0\u4E2A\u7C7B\u578B\u4E2D\u6311\u51FA\u4E00\u4E9B\u5C5E\u6027\u51FA\u6765" tabindex="-1"><a class="header-anchor" href="#pick-t-k-extends-keyof-t-\u4ECE\u67D0\u4E2A\u7C7B\u578B\u4E2D\u6311\u51FA\u4E00\u4E9B\u5C5E\u6027\u51FA\u6765" aria-hidden="true">#</a> <code>Pick&lt;T, K extends keyof T&gt;</code>\u4ECE\u67D0\u4E2A\u7C7B\u578B\u4E2D\u6311\u51FA\u4E00\u4E9B\u5C5E\u6027\u51FA\u6765</h4><p>\u6E90\u7801: <code>type Pick&lt;T, K extends keyof T&gt; = { [P in K]: T[P]; };</code></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">Todo</span> <span class="token punctuation">{</span>
 title<span class="token operator">:</span> <span class="token builtin">string</span>
 description<span class="token operator">:</span> <span class="token builtin">string</span>
 completed<span class="token operator">:</span> <span class="token builtin">boolean</span>
<span class="token punctuation">}</span>
<span class="token keyword">type</span> <span class="token class-name">TodoPriview</span> <span class="token operator">=</span> Pick<span class="token operator">&lt;</span>Todo<span class="token punctuation">,</span> <span class="token string">&#39;title&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;completed&#39;</span><span class="token operator">&gt;</span>
<span class="token comment">/* type TodoPriview = {
 title: string
 completed: boolean
} */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="record-k-extends-keyof-any-t-\u5C06-k-\u4E2D\u6240\u6709\u7684\u5C5E\u6027\u7684\u503C\u8F6C\u5316\u4E3A-t-\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#record-k-extends-keyof-any-t-\u5C06-k-\u4E2D\u6240\u6709\u7684\u5C5E\u6027\u7684\u503C\u8F6C\u5316\u4E3A-t-\u7C7B\u578B" aria-hidden="true">#</a> <code>Record&lt;K extends keyof any, T&gt;</code> \u5C06 <code>K</code> \u4E2D\u6240\u6709\u7684\u5C5E\u6027\u7684\u503C\u8F6C\u5316\u4E3A <code>T</code> \u7C7B\u578B</h4><p>\u6E90\u7801: <code>type Record&lt;K extends keyof any, T&gt; = { [P in K]: T }</code></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">PageInfo</span> <span class="token operator">=</span> <span class="token string">&#39;home&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;about&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;contact&#39;</span>
<span class="token keyword">type</span> <span class="token class-name">NewPageInfo</span> <span class="token operator">=</span> Record<span class="token operator">&lt;</span>PageInfo<span class="token punctuation">,</span> <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span><span class="token operator">&gt;</span>
<span class="token comment">/* type NewPageInfo = {
 home: {
  title: string
 }
 about: {
  title: string
 }
 contact: {
  title: string
 }
} */</span>
<span class="token keyword">const</span> homepage<span class="token operator">:</span> NewPageInfo <span class="token operator">=</span> <span class="token punctuation">{</span>
 home<span class="token operator">:</span> <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">&#39;Home&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
 about<span class="token operator">:</span> <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">&#39;About&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
 contact<span class="token operator">:</span> <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">&#39;Contact&#39;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="returntype-t-extends-args-any-any-\u83B7\u53D6\u51FD\u6570\u8FD4\u56DE\u503C\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#returntype-t-extends-args-any-any-\u83B7\u53D6\u51FD\u6570\u8FD4\u56DE\u503C\u7C7B\u578B" aria-hidden="true">#</a> <code>ReturnType&lt;T extends (...args: any[]) =&gt; any&gt;</code> \u83B7\u53D6\u51FD\u6570\u8FD4\u56DE\u503C\u7C7B\u578B</h4><p>\u6E90\u7801: <code>type ReturnType&lt;T extends (...args: any[]) =&gt; any&gt; = T extends (...args: any[]) =&gt; infer R ? R : any</code></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token function-variable function">returnPerson</span> <span class="token operator">=</span> <span class="token punctuation">(</span>name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> name<span class="token punctuation">,</span> age <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">type</span> <span class="token class-name">ReturnPersonReturnType</span> <span class="token operator">=</span> ReturnType<span class="token operator">&lt;</span><span class="token keyword">typeof</span> returnPerson<span class="token operator">&gt;</span>
<span class="token comment">// type ReturnPersonReturnType = { name: string; age: number; }</span>
<span class="token keyword">const</span> foo<span class="token operator">:</span> ReturnPersonReturnType <span class="token operator">=</span> <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&#39;foo&#39;</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span>
<span class="token comment">// const bar: ReturnPersonReturnType = 1 // Error: \u4E0D\u80FD\u5C06\u7C7B\u578B\u201Cnumber\u201D\u5206\u914D\u7ED9\u7C7B\u578B\u201C{ name: string; age: number; }\u201D\u3002ts(2322)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="exclude-t-u-\u5C06-t-\u4E2D\u7684-u-\u79FB\u9664\u6389" tabindex="-1"><a class="header-anchor" href="#exclude-t-u-\u5C06-t-\u4E2D\u7684-u-\u79FB\u9664\u6389" aria-hidden="true">#</a> <code>Exclude&lt;T, U&gt;</code> \u5C06 <code>T</code> \u4E2D\u7684 <code>U</code> \u79FB\u9664\u6389</h4><p>\u6E90\u7801: <code>type Exclude&lt;T, U&gt; = T extends U ? never : T;</code></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T0</span></span> <span class="token operator">=</span> Exclude<span class="token operator">&lt;</span><span class="token string">&#39;a&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;b&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token operator">&gt;</span> <span class="token comment">// type T0 = &quot;b&quot; | &quot;c&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="extract-t-u-\u4ECE-t-\u4E2D\u63D0\u53D6\u51FA-u" tabindex="-1"><a class="header-anchor" href="#extract-t-u-\u4ECE-t-\u4E2D\u63D0\u53D6\u51FA-u" aria-hidden="true">#</a> <code>Extract&lt;T, U&gt;</code> \u4ECE <code>T</code> \u4E2D\u63D0\u53D6\u51FA <code>U</code></h4><p>\u6E90\u7801: <code>type Extract&lt;T, U&gt; = T extends U ? T : never;</code></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T4</span></span> <span class="token operator">=</span> Extract<span class="token operator">&lt;</span><span class="token string">&#39;a&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;b&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token operator">&gt;</span> <span class="token comment">// type T4 = &quot;a&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="omit-t-k-extends-keyof-t-\u5FFD\u7565-t-\u4E2D\u7684-k-\u8FD4\u56DE\u6392\u9664-k-\u540E\u7684-t" tabindex="-1"><a class="header-anchor" href="#omit-t-k-extends-keyof-t-\u5FFD\u7565-t-\u4E2D\u7684-k-\u8FD4\u56DE\u6392\u9664-k-\u540E\u7684-t" aria-hidden="true">#</a> <code>Omit&lt;T, K extends keyof T&gt;</code> \u5FFD\u7565 <code>T</code> \u4E2D\u7684 <code>K</code>\uFF0C\u8FD4\u56DE\u6392\u9664 <code>K</code> \u540E\u7684 <code>T</code></h4><p>\u6E90\u7801: <code>type Omit&lt;T, K extends keyof T&gt; = Pick&lt;T, Exclude&lt;keyof T, K&gt;&gt;</code></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">AboutBook</span> <span class="token punctuation">{</span>
 lookBook<span class="token operator">:</span> <span class="token builtin">string</span>
 writeBook<span class="token operator">:</span> <span class="token builtin">string</span>
 buyBook<span class="token operator">:</span> <span class="token builtin">string</span>
<span class="token punctuation">}</span>
<span class="token keyword">type</span> <span class="token class-name">BookThing</span> <span class="token operator">=</span> Omit<span class="token operator">&lt;</span>AboutBook<span class="token punctuation">,</span> <span class="token string">&#39;lookBook&#39;</span><span class="token operator">&gt;</span>
<span class="token comment">/* type BookThing = {
 writeBook: string
 buyBook: string
} */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="nonnullable-t-\u8FC7\u6EE4-t-\u4E2D\u7684-null-\u548C-undefined-\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#nonnullable-t-\u8FC7\u6EE4-t-\u4E2D\u7684-null-\u548C-undefined-\u7C7B\u578B" aria-hidden="true">#</a> <code>NonNullable&lt;T&gt;</code> \u8FC7\u6EE4 <code>T</code> \u4E2D\u7684 <code>null</code> \u548C <code>undefined</code> \u7C7B\u578B</h4><p>\u6E90\u7801: <code>type NonNullable&lt;T&gt; = T extends null ? never : T</code> ( \u8FD9\u91CC\u8BF4\u660E <code>undefined</code> \u4E5F <code>extends null</code> )</p><div class="language-typescipt ext-typescipt line-numbers-mode"><pre class="language-typescipt"><code>type SomeType = string | number | null | undefined | boolean
type FilterNullable = NonNullable&lt;SomeType&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="parameters-t-extends-args-any-any-\u7528\u4E8E\u83B7\u53D6\u51FD\u6570\u7684\u53C2\u6570\u7C7B\u578B\u7EC4\u6210\u7684\u5143\u7EC4\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#parameters-t-extends-args-any-any-\u7528\u4E8E\u83B7\u53D6\u51FD\u6570\u7684\u53C2\u6570\u7C7B\u578B\u7EC4\u6210\u7684\u5143\u7EC4\u7C7B\u578B" aria-hidden="true">#</a> <code>Parameters&lt;T extends (...args: any) =&gt; any&gt;</code> \u7528\u4E8E\u83B7\u53D6\u51FD\u6570\u7684\u53C2\u6570\u7C7B\u578B\u7EC4\u6210\u7684\u5143\u7EC4\u7C7B\u578B</h4><p>\u6E90\u7801: <code>type Parameters&lt;T extends (...args: any) =&gt; any&gt; = T extends (...args: infer P) =&gt; any ? P : never</code></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name"><span class="token constant">F0</span></span> <span class="token operator">=</span> <span class="token punctuation">(</span>v1<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> v2<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> v3<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">any</span>
<span class="token keyword">type</span> <span class="token class-name">ParamsType</span> <span class="token operator">=</span> Parameters<span class="token operator">&lt;</span><span class="token constant">F0</span><span class="token operator">&gt;</span> <span class="token comment">// type ParamsType = [v1: number, v2: string, v3: boolean]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="tsconfig-json" tabindex="-1"><a class="header-anchor" href="#tsconfig-json" aria-hidden="true">#</a> tsconfig.json</h2><p><code>tsconfig.json</code> \u662F <code>TypeScript</code> \u9879\u76EE\u7684\u914D\u7F6E\u6587\u4EF6\u3002\u5982\u679C\u4E00\u4E2A\u76EE\u5F55\u4E0B\u5B58\u5728\u4E00\u4E2A <code>tsconfig.json</code> \u6587\u4EF6\uFF0C\u90A3\u4E48\u5F80\u5F80\u610F\u5473\u7740\u8FD9\u4E2A\u76EE\u5F55\u5C31\u662F <code>TypeScript</code> \u9879\u76EE\u7684\u6839\u76EE\u5F55\u3002</p><p><code>tsconfig.json</code> \u5305\u542B <code>TypeScript</code> \u7F16\u8BD1\u7684\u76F8\u5173\u914D\u7F6E\uFF0C\u901A\u8FC7\u66F4\u6539\u7F16\u8BD1\u914D\u7F6E\u9879\uFF0C\u6211\u4EEC\u53EF\u4EE5\u8BA9 <code>TypeScript</code> \u7F16\u8BD1\u51FA <code>ES6</code>\u3001<code>ES5</code>\u3001<code>node</code> \u7684\u4EE3\u7801\u3002</p><h3 id="tsconfig-json-\u91CD\u8981\u5B57\u6BB5" tabindex="-1"><a class="header-anchor" href="#tsconfig-json-\u91CD\u8981\u5B57\u6BB5" aria-hidden="true">#</a> tsconfig.json \u91CD\u8981\u5B57\u6BB5</h3><ul><li><code>files</code> \u8BBE\u7F6E\u8981\u7F16\u8BD1\u7684\u6587\u4EF6\u7684\u540D\u79F0\uFF1B</li><li><code>include</code> \u8BBE\u7F6E\u9700\u8981\u8FDB\u884C\u7F16\u8BD1\u7684\u6587\u4EF6\uFF0C\u652F\u6301\u8DEF\u5F84\u6A21\u5F0F\u5339\u914D\uFF1B</li><li><code>exclude</code> \u8BBE\u7F6E\u65E0\u9700\u8FDB\u884C\u7F16\u8BD1\u7684\u6587\u4EF6\uFF0C\u652F\u6301\u8DEF\u5F84\u6A21\u5F0F\u5339\u914D\uFF1B</li><li><code>compilerOptions</code> \u8BBE\u7F6E\u4E0E\u7F16\u8BD1\u6D41\u7A0B\u76F8\u5173\u7684\u9009\u9879\u3002</li></ul><h3 id="compileroptions-\u9009\u9879" tabindex="-1"><a class="header-anchor" href="#compileroptions-\u9009\u9879" aria-hidden="true">#</a> compilerOptions \u9009\u9879</h3><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>
 <span class="token property">&quot;compilerOptions&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token comment">/* \u57FA\u672C\u9009\u9879 */</span>
  <span class="token property">&quot;target&quot;</span><span class="token operator">:</span> <span class="token string">&quot;es5&quot;</span><span class="token punctuation">,</span> <span class="token comment">// \u6307\u5B9A ECMAScript \u76EE\u6807\u7248\u672C: &#39;ES3&#39; (default), &#39;ES5&#39;, &#39;ES6&#39;/&#39;ES2015&#39;, &#39;ES2016&#39;, &#39;ES2017&#39;, or &#39;ESNEXT&#39;</span>
  <span class="token property">&quot;module&quot;</span><span class="token operator">:</span> <span class="token string">&quot;commonjs&quot;</span><span class="token punctuation">,</span> <span class="token comment">// \u6307\u5B9A\u4F7F\u7528\u6A21\u5757: &#39;commonjs&#39;, &#39;amd&#39;, &#39;system&#39;, &#39;umd&#39; or &#39;es2015&#39;</span>
  <span class="token property">&quot;lib&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// \u6307\u5B9A\u8981\u5305\u542B\u5728\u7F16\u8BD1\u4E2D\u7684\u5E93\u6587\u4EF6</span>
  <span class="token property">&quot;allowJs&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// \u5141\u8BB8\u7F16\u8BD1 javascript \u6587\u4EF6</span>
  <span class="token property">&quot;checkJs&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// \u62A5\u544A javascript \u6587\u4EF6\u4E2D\u7684\u9519\u8BEF</span>
  <span class="token property">&quot;jsx&quot;</span><span class="token operator">:</span> <span class="token string">&quot;preserve&quot;</span><span class="token punctuation">,</span> <span class="token comment">// \u6307\u5B9A jsx \u4EE3\u7801\u7684\u751F\u6210: &#39;preserve&#39;, &#39;react-native&#39;, or &#39;react&#39;</span>
  <span class="token property">&quot;declaration&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// \u751F\u6210\u76F8\u5E94\u7684 &#39;.d.ts&#39; \u6587\u4EF6</span>
  <span class="token property">&quot;sourceMap&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// \u751F\u6210\u76F8\u5E94\u7684 &#39;.map&#39; \u6587\u4EF6</span>
  <span class="token property">&quot;outFile&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./&quot;</span><span class="token punctuation">,</span> <span class="token comment">// \u5C06\u8F93\u51FA\u6587\u4EF6\u5408\u5E76\u4E3A\u4E00\u4E2A\u6587\u4EF6</span>
  <span class="token property">&quot;outDir&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./&quot;</span><span class="token punctuation">,</span> <span class="token comment">// \u6307\u5B9A\u8F93\u51FA\u76EE\u5F55</span>
  <span class="token property">&quot;rootDir&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./&quot;</span><span class="token punctuation">,</span> <span class="token comment">// \u7528\u6765\u63A7\u5236\u8F93\u51FA\u76EE\u5F55\u7ED3\u6784 --outDir.</span>
  <span class="token property">&quot;removeComments&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// \u5220\u9664\u7F16\u8BD1\u540E\u7684\u6240\u6709\u7684\u6CE8\u91CA</span>
  <span class="token property">&quot;noEmit&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// \u4E0D\u751F\u6210\u8F93\u51FA\u6587\u4EF6</span>
  <span class="token property">&quot;importHelpers&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// \u4ECE tslib \u5BFC\u5165\u8F85\u52A9\u5DE5\u5177\u51FD\u6570</span>
  <span class="token property">&quot;isolatedModules&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// \u5C06\u6BCF\u4E2A\u6587\u4EF6\u505A\u4E3A\u5355\u72EC\u7684\u6A21\u5757 \uFF08\u4E0E &#39;ts.transpileModule&#39; \u7C7B\u4F3C\uFF09.</span>

  <span class="token comment">/* \u4E25\u683C\u7684\u7C7B\u578B\u68C0\u67E5\u9009\u9879 */</span>
  <span class="token property">&quot;strict&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// \u542F\u7528\u6240\u6709\u4E25\u683C\u7C7B\u578B\u68C0\u67E5\u9009\u9879</span>
  <span class="token property">&quot;noImplicitAny&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// \u5728\u8868\u8FBE\u5F0F\u548C\u58F0\u660E\u4E0A\u6709\u9690\u542B\u7684 any\u7C7B\u578B\u65F6\u62A5\u9519</span>
  <span class="token property">&quot;strictNullChecks&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// \u542F\u7528\u4E25\u683C\u7684 null \u68C0\u67E5</span>
  <span class="token property">&quot;noImplicitThis&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// \u5F53 this \u8868\u8FBE\u5F0F\u503C\u4E3A any \u7C7B\u578B\u7684\u65F6\u5019\uFF0C\u751F\u6210\u4E00\u4E2A\u9519\u8BEF</span>
  <span class="token property">&quot;alwaysStrict&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// \u4EE5\u4E25\u683C\u6A21\u5F0F\u68C0\u67E5\u6BCF\u4E2A\u6A21\u5757\uFF0C\u5E76\u5728\u6BCF\u4E2A\u6587\u4EF6\u91CC\u52A0\u5165 &#39;use strict&#39;</span>

  <span class="token comment">/* \u989D\u5916\u7684\u68C0\u67E5 */</span>
  <span class="token property">&quot;noUnusedLocals&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// \u6709\u672A\u4F7F\u7528\u7684\u53D8\u91CF\u65F6\uFF0C\u629B\u51FA\u9519\u8BEF</span>
  <span class="token property">&quot;noUnusedParameters&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// \u6709\u672A\u4F7F\u7528\u7684\u53C2\u6570\u65F6\uFF0C\u629B\u51FA\u9519\u8BEF</span>
  <span class="token property">&quot;noImplicitReturns&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// \u5E76\u4E0D\u662F\u6240\u6709\u51FD\u6570\u91CC\u7684\u4EE3\u7801\u90FD\u6709\u8FD4\u56DE\u503C\u65F6\uFF0C\u629B\u51FA\u9519\u8BEF</span>
  <span class="token property">&quot;noFallthroughCasesInSwitch&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// \u62A5\u544A switch \u8BED\u53E5\u7684 fallthrough \u9519\u8BEF\u3002\uFF08\u5373\uFF0C\u4E0D\u5141\u8BB8 switch \u7684 case \u8BED\u53E5\u8D2F\u7A7F\uFF09</span>

  <span class="token comment">/* \u6A21\u5757\u89E3\u6790\u9009\u9879 */</span>
  <span class="token property">&quot;moduleResolution&quot;</span><span class="token operator">:</span> <span class="token string">&quot;node&quot;</span><span class="token punctuation">,</span> <span class="token comment">// \u9009\u62E9\u6A21\u5757\u89E3\u6790\u7B56\u7565\uFF1A &#39;node&#39; (Node.js) or &#39;classic&#39; (TypeScript pre-1.6)</span>
  <span class="token property">&quot;baseUrl&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./&quot;</span><span class="token punctuation">,</span> <span class="token comment">// \u7528\u4E8E\u89E3\u6790\u975E\u76F8\u5BF9\u6A21\u5757\u540D\u79F0\u7684\u57FA\u76EE\u5F55</span>
  <span class="token property">&quot;paths&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment">// \u6A21\u5757\u540D\u5230\u57FA\u4E8E baseUrl \u7684\u8DEF\u5F84\u6620\u5C04\u7684\u5217\u8868</span>
  <span class="token property">&quot;rootDirs&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// \u6839\u6587\u4EF6\u5939\u5217\u8868\uFF0C\u5176\u7EC4\u5408\u5185\u5BB9\u8868\u793A\u9879\u76EE\u8FD0\u884C\u65F6\u7684\u7ED3\u6784\u5185\u5BB9</span>
  <span class="token property">&quot;typeRoots&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// \u5305\u542B\u7C7B\u578B\u58F0\u660E\u7684\u6587\u4EF6\u5217\u8868</span>
  <span class="token property">&quot;types&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// \u9700\u8981\u5305\u542B\u7684\u7C7B\u578B\u58F0\u660E\u6587\u4EF6\u540D\u5217\u8868</span>
  <span class="token property">&quot;allowSyntheticDefaultImports&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// \u5141\u8BB8\u4ECE\u6CA1\u6709\u8BBE\u7F6E\u9ED8\u8BA4\u5BFC\u51FA\u7684\u6A21\u5757\u4E2D\u9ED8\u8BA4\u5BFC\u5165\u3002</span>

  <span class="token comment">/* Source Map Options */</span>
  <span class="token property">&quot;sourceRoot&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./&quot;</span><span class="token punctuation">,</span> <span class="token comment">// \u6307\u5B9A\u8C03\u8BD5\u5668\u5E94\u8BE5\u627E\u5230 TypeScript \u6587\u4EF6\u800C\u4E0D\u662F\u6E90\u6587\u4EF6\u7684\u4F4D\u7F6E</span>
  <span class="token property">&quot;mapRoot&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./&quot;</span><span class="token punctuation">,</span> <span class="token comment">// \u6307\u5B9A\u8C03\u8BD5\u5668\u5E94\u8BE5\u627E\u5230\u6620\u5C04\u6587\u4EF6\u800C\u4E0D\u662F\u751F\u6210\u6587\u4EF6\u7684\u4F4D\u7F6E</span>
  <span class="token property">&quot;inlineSourceMap&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// \u751F\u6210\u5355\u4E2A soucemaps \u6587\u4EF6\uFF0C\u800C\u4E0D\u662F\u5C06 sourcemaps \u751F\u6210\u4E0D\u540C\u7684\u6587\u4EF6</span>
  <span class="token property">&quot;inlineSources&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// \u5C06\u4EE3\u7801\u4E0E sourcemaps \u751F\u6210\u5230\u4E00\u4E2A\u6587\u4EF6\u4E2D\uFF0C\u8981\u6C42\u540C\u65F6\u8BBE\u7F6E\u4E86 --inlineSourceMap \u6216 --sourceMap \u5C5E\u6027</span>

  <span class="token comment">/* \u5176\u4ED6\u9009\u9879 */</span>
  <span class="token property">&quot;experimentalDecorators&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// \u542F\u7528\u88C5\u9970\u5668</span>
  <span class="token property">&quot;emitDecoratorMetadata&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token comment">// \u4E3A\u88C5\u9970\u5668\u63D0\u4F9B\u5143\u6570\u636E\u7684\u652F\u6301</span>
 <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,103),u=s("br",null,null,-1),k={href:"https://juejin.cn/post/7018805943710253086#heading-73",target:"_blank",rel:"noopener noreferrer"},d=s("br",null,null,-1),m={href:"http://ts.xcatliu.com/introduction/what-is-typescript.html",target:"_blank",rel:"noopener noreferrer"};function v(b,y){const a=l("ExternalLinkIcon");return p(),o("div",null,[r,s("blockquote",null,[s("p",null,[n("\u672C\u6587\u53C2\u8003\u6587\u7AE0"),u,n(" > "),s("a",k,[n("2021 typescript \u53F2\u4E0A\u6700\u5F3A\u5B66\u4E60\u5165\u95E8\u6587\u7AE0(2w \u5B57) "),e(a)]),n(),d,n(" > "),s("a",m,[n("TypeScript \u5165\u95E8\u6559\u7A0B"),e(a)])])])])}var h=t(i,[["render",v],["__file","index.html.vue"]]);export{h as default};
