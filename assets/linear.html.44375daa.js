import{_ as n,o as s,c as a,e}from"./app.f824c78a.js";const p={},t=e(`<h1 id="\u7EBF\u6027\u7ED3\u6784" tabindex="-1"><a class="header-anchor" href="#\u7EBF\u6027\u7ED3\u6784" aria-hidden="true">#</a> \u7EBF\u6027\u7ED3\u6784</h1><hr><h2 id="\u6570\u636E\u7ED3\u6784\u548C\u7B97\u6CD5\u6982\u8FF0" tabindex="-1"><a class="header-anchor" href="#\u6570\u636E\u7ED3\u6784\u548C\u7B97\u6CD5\u6982\u8FF0" aria-hidden="true">#</a> \u6570\u636E\u7ED3\u6784\u548C\u7B97\u6CD5\u6982\u8FF0</h2><p><strong>1\u3001\u4EC0\u4E48\u662F\u6570\u636E\u7ED3\u6784\uFF1F</strong></p><p>\u5B58\u50A8\u548C\u8FD0\u7B97\u662F\u7A0B\u5E8F\u7684\u4E24\u5927\u57FA\u7840\u529F\u80FD\uFF0C\u6570\u636E\u7ED3\u6784\u662F\u4E13\u95E8\u7814\u7A76\u6570\u636E\u5B58\u50A8\u7684\u5B66\u79D1\u3002</p><p>\u5F88\u591A\u65F6\u5019\uFF0C\u6211\u4EEC\u65E0\u6CD5\u4EC5\u4F7F\u7528\u7B80\u5355\u7684\u6570\u5B57\u3001\u5B57\u7B26\u4E32\u3001\u5E03\u5C14\u5C31\u80FD\u5B8C\u6574\u7684\u63CF\u8FF0\u6570\u636E\uFF0C\u53EF\u80FD\u6211\u4EEC\u5E0C\u671B\u4F7F\u7528\u6570\u7EC4\u3001\u5BF9\u8C61\u3001\u6216\u5B83\u4EEC\u7EC4\u5408\u800C\u6210\u7684\u590D\u5408\u7ED3\u6784\u6765\u5BF9\u6570\u636E\u8FDB\u884C\u63CF\u8FF0\u3002\u8FD9\u79CD\u590D\u5408\u7684\u7ED3\u6784\u5C31\u662F\u6570\u636E\u7ED3\u6784\u3002</p><p>\u800C\u5728\u5B9E\u9645\u5F00\u53D1\u4E2D\uFF0C\u6211\u4EEC\u4F1A\u53D1\u73B0\u5F88\u591A\u573A\u666F\u4E2D\u4F7F\u7528\u7684\u6570\u636E\u7ED3\u6784\u6709\u7740\u76F8\u4F3C\u7684\u7279\u5F81\uFF0C\u4E8E\u662F\uFF0C\u6570\u636E\u7ED3\u6784\u8FD9\u95E8\u5B66\u79D1\uFF0C\u5C31\u628A\u8FD9\u4E9B\u76F8\u4F3C\u7684\u7ED3\u6784\u5355\u72EC\u63D0\u53D6\u51FA\u6765\u8FDB\u884C\u7814\u7A76\u3002</p><p>\u5728\u8FD9\u95E8\u5B66\u79D1\u4E2D\uFF0C\u5E38\u89C1\u7684\u6570\u636E\u7ED3\u6784\u6709\uFF1A\u6570\u7EC4\u3001\u94FE\u8868\u3001\u6811\u3001\u56FE\u7B49</p><p><strong>2\u3001\u4EC0\u4E48\u662F\u7B97\u6CD5\uFF1F</strong></p><p>\u5B58\u50A8\u548C\u8FD0\u7B97\u662F\u7A0B\u5E8F\u7684\u4E24\u5927\u57FA\u7840\u529F\u80FD\uFF0C\u7B97\u6CD5\u662F\u4E13\u95E8\u7814\u7A76\u8FD0\u7B97\u8FC7\u7A0B\u7684\u5B66\u79D1\u3002</p><p>\u4E00\u4E2A\u7A0B\u5E8F\uFF0C\u5F88\u591A\u65F6\u5019\u90FD\u9700\u8981\u6839\u636E\u4E00\u79CD\u5DF2\u77E5\u6570\u636E\uFF0C\u901A\u8FC7\u8BA1\u7B97\uFF0C\u5F97\u5230\u53E6\u4E00\u4E2A\u672A\u77E5\u6570\u636E\uFF0C\u8FD9\u4E2A\u8FD0\u7B97\u8FC7\u7A0B\u4F7F\u7528\u7684\u65B9\u6CD5\uFF0C\u5C31\u662F\u7B97\u6CD5\u3002</p><p>\u800C\u5728\u5F88\u591A\u7684\u573A\u666F\u4E2D\uFF0C\u5B83\u4EEC\u4F7F\u7528\u7684\u7B97\u6CD5\u6709\u4E00\u4E9B\u5171\u901A\u7684\u7279\u70B9\uFF0C\u4E8E\u662F\u628A\u8FD9\u4E9B\u5171\u901A\u7684\u7B97\u6CD5\u62BD\u8C61\u51FA\u6765\uFF0C\u5C31\u884C\u4E86\u5E38\u89C1\u7B97\u6CD5\u3002</p><p>\u4ECE\u4E00\u4E2A\u66F4\u9AD8\u7684\u89D2\u5EA6\u6765\u5BF9\u7B97\u6CD5\u5212\u5206\uFF0C\u5E38\u89C1\u7684\u7B97\u6CD5\u6709\uFF1A\u7A77\u4E3E\u6CD5\u3001\u5206\u6CBB\u6CD5\u3001\u8D2A\u5FC3\u7B97\u6CD5\u3001\u52A8\u6001\u89C4\u5212</p><p><strong>3\u3001\u6570\u636E\u7ED3\u6784\u548C\u7B97\u6CD5\u6709\u4EC0\u4E48\u5173\u7CFB\uFF1F</strong></p><p>\u4E00\u4E2A\u9762\u5411\u7684\u662F\u5B58\u50A8\uFF0C\u4E00\u4E2A\u9762\u5411\u7684\u662F\u8FD0\u7B97\uFF0C\u5B83\u4EEC\u5171\u540C\u6784\u6210\u4E86\u8BA1\u7B97\u673A\u7A0B\u5E8F\u7684\u4E24\u4E2A\u91CD\u8981\u90E8\u5206\u3002</p><p>\u6709\u4E86\u76F8\u5E94\u7684\u6570\u636E\u7ED3\u6784\uFF0C\u514D\u4E0D\u4E86\u5BF9\u8FD9\u79CD\u6570\u636E\u7ED3\u6784\u7684\u5404\u79CD\u53D8\u5316\u8FDB\u884C\u8FD0\u7B97\uFF0C\u6240\u4EE5\uFF0C\u5F88\u591A\u65F6\u5019\uFF0C\u67D0\u79CD\u6570\u636E\u7ED3\u6784\u90FD\u4F1A\u81EA\u7136\u800C\u7136\u7684\u642D\u914D\u4E0D\u5C11\u7B97\u6CD5\u3002</p><p><strong>4\u3001\u6570\u636E\u7ED3\u6784\u548C\u7B97\u6CD5\u4F7F\u7528\u4EC0\u4E48\u8BA1\u7B97\u673A\u8BED\u8A00\uFF1F</strong></p><p>\u6570\u636E\u7ED3\u6784\u548C\u7B97\u6CD5\u5C5E\u4E8E\u8BA1\u7B97\u673A\u57FA\u7840\uFF0C\u5B83\u4EEC\u548C\u5177\u4F53\u7684\u8BED\u8A00\u65E0\u5173\uFF0C\u7528\u4EFB\u4F55\u8BED\u8A00\u90FD\u53EF\u4EE5\u5B9E\u73B0\u3002</p><p>\u672C\u6587\u7AE0\u91C7\u7528 JavaScript \u8BED\u8A00\u3002</p><h2 id="\u7EBF\u6027\u7ED3\u6784-1" tabindex="-1"><a class="header-anchor" href="#\u7EBF\u6027\u7ED3\u6784-1" aria-hidden="true">#</a> \u7EBF\u6027\u7ED3\u6784</h2><p>\u7EBF\u6027\u7ED3\u6784\u662F\u6570\u636E\u7ED3\u6784\u4E2D\u7684\u4E00\u79CD\u5206\u7C7B\uFF0C\u7528\u4E8E\u8868\u793A\u4E00\u7CFB\u5217\u7684\u5143\u7D20\u5F62\u6210\u7684\u6709\u5E8F\u96C6\u5408\u3002 \u5E38\u89C1\u7684\u7EBF\u6027\u7ED3\u6784\u5305\u62EC\uFF1A\u6570\u7EC4\u3001\u94FE\u8868\u3001\u6808\u3001\u961F\u5217</p><h3 id="\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4" aria-hidden="true">#</a> \u6570\u7EC4</h3><p>\u7279\u522B\u6CE8\u610F\uFF1A\u8FD9\u91CC\u6240\u8BF4\u7684\u6570\u7EC4\u662F\u6570\u636E\u7ED3\u6784\u4E2D\u7684\u6570\u7EC4\uFF0C\u548C JS \u4E2D\u7684\u6570\u7EC4\u4E0D\u4E00\u6837</p><p>\u6570\u7EC4\u662F\u4E00\u6574\u5757\u8FDE\u7EED\u7684\u5185\u5B58\u7A7A\u95F4\uFF0C\u5B83\u7531\u56FA\u5B9A\u6570\u91CF\u7684\u5143\u7D20\u7EC4\u6210\uFF0C\u6570\u7EC4\u5177\u6709\u4EE5\u4E0B\u57FA\u672C\u7279\u5F81\uFF1A \u6574\u4E2A\u6570\u7EC4\u5360\u7528\u7684\u5185\u5B58\u7A7A\u95F4\u662F\u8FDE\u7EED\u7684 \u6570\u7EC4\u4E2D\u5143\u7D20\u7684\u6570\u91CF\u662F\u56FA\u5B9A\u7684\uFF08\u4E0D\u53EF\u589E\u52A0\u4E5F\u4E0D\u53EF\u51CF\u5C11\uFF09\uFF0C\u521B\u5EFA\u6570\u7EC4\u65F6\u5C31\u5FC5\u987B\u6307\u5B9A\u5176\u957F\u5EA6 \u6BCF\u4E2A\u5143\u7D20\u5360\u7528\u7684\u5185\u5B58\u5927\u5C0F\u662F\u5B8C\u5168\u4E00\u6837</p><p>\u6839\u636E\u6570\u7EC4\u7684\u57FA\u672C\u7279\u5F81\uFF0C\u6211\u4EEC\u53EF\u4EE5\u63A8\u5BFC\u51FA\u6570\u7EC4\u5177\u6709\u4EE5\u4E0B\u7279\u70B9\uFF1A 1. \u901A\u8FC7\u4E0B\u6807\u5BFB\u627E\u5BF9\u5E94\u7684\u5143\u7D20\u6548\u7387\u6781\u9AD8\uFF0C\u56E0\u6B64\u904D\u5386\u901F\u5EA6\u5FEB 2. \u65E0\u6CD5\u6DFB\u52A0\u548C\u5220\u9664\u6570\u636E\uFF0C\u867D\u7136\u53EF\u4EE5\u901A\u8FC7\u67D0\u79CD\u7B97\u6CD5\u5B8C\u6210\u7C7B\u4F3C\u64CD\u4F5C\uFF0C\u4F46\u4F1A\u589E\u52A0\u989D\u5916\u7684\u5185\u5B58\u5F00\u9500\u6216\u65F6\u95F4\u5F00\u9500 3. \u5982\u679C\u6570\u7EC4\u9700\u8981\u7684\u7A7A\u95F4\u5F88\u5927\uFF0C\u53EF\u80FD\u4E00\u65F6\u65E0\u6CD5\u627E\u5230\u8DB3\u591F\u5927\u7684\u8FDE\u7EED\u5185\u5B58</p><p><strong>JS \u4E2D\u7684\u6570\u7EC4</strong></p><p>\u5728 ES6 \u4E4B\u524D\uFF0CJS \u6CA1\u6709\u771F\u6B63\u610F\u4E49\u7684\u6570\u7EC4\uFF0C\u6240\u8C13\u7684 Array\uFF0C\u5B9E\u9645\u4E0A\u5E95\u5C42\u5B9E\u73B0\u662F\u94FE\u8868\u3002 ES6 \u4E4B\u540E\uFF0C\u51FA\u73B0\u771F\u6B63\u7684\u6570\u7EC4\uFF08\u7C7B\u578B\u5316\u6570\u7EC4\uFF09\uFF0C\u4F46\u662F\u7531\u4E8E\u53EA\u80FD\u5B58\u50A8\u6570\u5B57\uFF0C\u56E0\u6B64\u529F\u80FD\u6709\u9650 \u76EE\u524D\u6765\u8BB2\uFF0CJS \u8BED\u8A00\u53EA\u5177\u5907\u4E0D\u5B8C\u5584\u7684\u6570\u7EC4\uFF08\u7C7B\u578B\u5316\u6570\u7EC4\uFF09</p><h3 id="\u94FE\u8868" tabindex="-1"><a class="header-anchor" href="#\u94FE\u8868" aria-hidden="true">#</a> \u94FE\u8868</h3><p>\u4E3A\u5F25\u8865\u6570\u7EC4\u7684\u7F3A\u9677\u800C\u51FA\u73B0\u7684\u4E00\u79CD\u6570\u636E\u7ED3\u6784\uFF0C\u5B83\u5177\u6709\u4EE5\u4E0B\u57FA\u672C\u7279\u5F81\uFF1A \u6BCF\u4E2A\u5143\u7D20\u9664\u4E86\u5B58\u50A8\u6570\u636E\uFF0C\u9700\u8981\u6709\u989D\u5916\u7684\u5185\u5B58\u5B58\u50A8\u4E00\u4E2A\u5F15\u7528\uFF08\u5730\u5740\uFF09\uFF0C\u6765\u6307\u5411\u4E0B\u4E00\u4E2A\u5143\u7D20 \u6BCF\u4E2A\u5143\u7D20\u5360\u7528\u7684\u5185\u5B58\u7A7A\u95F4\u5E76\u4E0D\u8981\u6C42\u662F\u8FDE\u7EED\u7684 \u5F80\u5F80\u4F7F\u7528\u94FE\u8868\u7684\u7B2C\u4E00\u4E2A\u8282\u70B9\uFF08\u6839\u8282\u70B9\uFF09\u6765\u4EE3\u8868\u6574\u4E2A\u94FE\u8868</p><p>\u6839\u636E\u94FE\u8868\u7684\u57FA\u672C\u7279\u5F81\uFF0C\u6211\u4EEC\u53EF\u4EE5\u63A8\u5BFC\u51FA\u5B83\u5177\u6709\u4EE5\u4E0B\u7279\u70B9\uFF1A 1. \u957F\u5EA6\u662F\u53EF\u53D8\u7684\uFF0C\u968F\u65F6\u53EF\u4EE5\u589E\u52A0\u548C\u5220\u9664\u5143\u7D20 2. \u63D2\u5165\u548C\u5220\u9664\u5143\u7D20\u7684\u6548\u7387\u6781\u9AD8 3. \u7531\u4E8E\u8981\u5B58\u50A8\u4E0B\u4E00\u4E2A\u5143\u7D20\u7684\u5730\u5740\uFF0C\u4F1A\u589E\u52A0\u989D\u5916\u7684\u5185\u5B58\u5F00\u9500 4. \u901A\u8FC7\u4E0B\u6807\u67E5\u8BE2\u94FE\u8868\u4E2D\u7684\u67D0\u4E2A\u8282\u70B9\uFF0C\u6548\u7387\u5F88\u4F4E\uFF0C\u56E0\u6B64\u94FE\u8868\u7684\u4E0B\u6807\u904D\u5386\u6548\u7387\u4F4E</p><h3 id="\u624B\u52A8\u7528\u4EE3\u7801\u5B9E\u73B0\u94FE\u8868" tabindex="-1"><a class="header-anchor" href="#\u624B\u52A8\u7528\u4EE3\u7801\u5B9E\u73B0\u94FE\u8868" aria-hidden="true">#</a> \u624B\u52A8\u7528\u4EE3\u7801\u5B9E\u73B0\u94FE\u8868</h3><p>\u5B9E\u9645\u4E0A\uFF0C\u5F88\u591A\u8BED\u8A00\u672C\u8EAB\u5DF2\u7ECF\u5B9E\u73B0\u4E86\u94FE\u8868\uFF08\u5982 JS \u4E2D\u7684\u6570\u7EC4\uFF0C\u5E95\u5C42\u5C31\u662F\u7528\u94FE\u8868\u5B9E\u73B0\u7684\uFF09\uFF0C\u4F46\u94FE\u8868\u4F5C\u4E3A\u4E00\u79CD\u57FA\u7840\u7684\u6570\u636E\u7ED3\u6784\uFF0C\u901A\u8FC7\u624B\u5199\u4EE3\u7801\u5B9E\u73B0\u94FE\u8868\uFF0C\u4E0D\u4EC5\u53EF\u4EE5\u953B\u70BC\u7A0B\u5E8F\u601D\u7EF4\u548C\u4EE3\u7801\u8F6C\u6362\u80FD\u529B\uFF0C\u5BF9\u4E8E\u540E\u5E8F\u7684\u590D\u6742\u6570\u636E\u7ED3\u6784\u7684\u5B66\u4E60\u4E5F\u662F\u975E\u5E38\u6709\u5E2E\u52A9\u7684\u3002 \u56E0\u6B64\uFF0C\u624B\u5199\u94FE\u8868\u662F\u5B66\u4E60\u6570\u636E\u7ED3\u6784\u548C\u7B97\u6CD5\u7684\u4E00\u95E8\u57FA\u672C\u529F \u624B\u5199\u4E00\u4E2A\u94FE\u8868\u7ED3\u6784\uFF0C\u5E76\u5B8C\u6210\u4E00\u4E9B\u94FE\u8868\u7684\u76F8\u5173\u51FD\u6570\uFF0C\u8981\u5B9E\u73B0\u4EE5\u4E0B\u529F\u80FD\uFF1A ps: \u4EE5\u4E0B\u4EE3\u7801\u4E3B\u8981\u4F7F\u7528\u5206\u6CBB\u6CD5\uFF08\u9012\u5F52\uFF09\u6765\u5B8C\u6210</p><p><strong>1. \u521B\u5EFA\u4E00\u4E2A\u94FE\u8868</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u94FE\u8868\u7684\u6784\u9020\u51FD\u6570</span>
<span class="token keyword">function</span> <span class="token function">Node</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> value
 <span class="token keyword">this</span><span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">null</span>
<span class="token punctuation">}</span>
<span class="token keyword">var</span> node1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>
<span class="token keyword">var</span> node2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>
<span class="token keyword">var</span> node3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span>
node1<span class="token punctuation">.</span>next <span class="token operator">=</span> node2
node2<span class="token punctuation">.</span>next <span class="token operator">=</span> node3
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>2. \u904D\u5386\u6253\u5370</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u904D\u5386\u6253\u5370</span>
<span class="token comment">// root \u8868\u793A\u94FE\u8868\u7684\u6839\u8282\u70B9</span>
<span class="token keyword">function</span> <span class="token function">print</span><span class="token punctuation">(</span><span class="token parameter">root</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>root<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span>
 <span class="token punctuation">}</span>
 console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>value<span class="token punctuation">)</span>
 <span class="token function">print</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>next<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token function">print</span><span class="token punctuation">(</span>node1<span class="token punctuation">)</span>
<span class="token comment">// 3</span>
<span class="token comment">// 5</span>
<span class="token comment">// 8</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>3. \u83B7\u53D6\u94FE\u8868\u7684\u957F\u5EA6</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u83B7\u53D6\u6307\u5B9A\u94FE\u8868\u7684\u957F\u5EA6</span>
<span class="token keyword">function</span> <span class="token function">getLength</span><span class="token punctuation">(</span><span class="token parameter">node</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>node<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token number">0</span>
 <span class="token punctuation">}</span>
 <span class="token keyword">return</span> <span class="token number">1</span> <span class="token operator">+</span> <span class="token function">getLength</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>next<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token function">getLength</span><span class="token punctuation">(</span>node1<span class="token punctuation">)</span>
<span class="token comment">// 3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>4.\u901A\u8FC7\u4E0B\u6807\u83B7\u53D6\u94FE\u8868\u4E2D\u7684\u67D0\u4E2A\u6570\u636E</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u901A\u8FC7\u4E0B\u6807\u83B7\u53D6\u6307\u5B9A\u94FE\u8868\u4E2D\u7684\u67D0\u4E2A\u6570\u636E</span>
<span class="token keyword">function</span> <span class="token function">getValue</span><span class="token punctuation">(</span><span class="token parameter">root<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token keyword">function</span> <span class="token function">_getValue</span><span class="token punctuation">(</span><span class="token parameter">node<span class="token punctuation">,</span> curIndex</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>curIndex <span class="token operator">===</span> index<span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token keyword">return</span> node
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>node<span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token keyword">return</span> <span class="token boolean">false</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token function">_getValue</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>next<span class="token punctuation">,</span> curIndex <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>
 <span class="token punctuation">}</span>
 <span class="token keyword">return</span> <span class="token function">_getValue</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token function">getValue</span><span class="token punctuation">(</span>node1<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
<span class="token comment">// Node {value: 8, next: null}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>5.\u901A\u8FC7\u4E0B\u6807\u8BBE\u7F6E\u94FE\u8868\u4E2D\u7684\u67D0\u4E2A\u6570\u636E</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u901A\u8FC7\u4E0B\u6807\u8BBE\u7F6E\u94FE\u8868\u4E2D\u7684\u67D0\u4E2A\u6570\u636E</span>
<span class="token keyword">function</span> <span class="token function">setValue</span><span class="token punctuation">(</span><span class="token parameter">root<span class="token punctuation">,</span> index<span class="token punctuation">,</span> value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token keyword">function</span> <span class="token function">_setValue</span><span class="token punctuation">(</span><span class="token parameter">node<span class="token punctuation">,</span> curIndex</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>node<span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token comment">//\u8282\u70B9\u4E0D\u5B58\u5728,\u65E0\u6CD5\u8BBE\u7F6E</span>
   <span class="token keyword">return</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>curIndex <span class="token operator">===</span> index<span class="token punctuation">)</span> <span class="token punctuation">{</span>
   node<span class="token punctuation">.</span>value <span class="token operator">=</span> value
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
   <span class="token function">_setValue</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>next<span class="token punctuation">,</span> curIndex <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
 <span class="token punctuation">}</span>
 <span class="token function">_setValue</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token function">setValue</span><span class="token punctuation">(</span>node1<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">999</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">getValue</span><span class="token punctuation">(</span>node1<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// Node {value: 999, next: null}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>6.\u5728\u94FE\u8868\u67D0\u4E00\u4E2A\u8282\u70B9\u4E4B\u540E\u52A0\u5165\u4E00\u4E2A\u65B0\u8282\u70B9</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5728\u94FE\u8868\u6307\u5B9A\u4E0B\u6807\u7684\u4F4D\u7F6E\u52A0\u5165\u65B0\u8282\u70B9</span>
<span class="token keyword">function</span> <span class="token function">insert</span><span class="token punctuation">(</span><span class="token parameter">root<span class="token punctuation">,</span> index<span class="token punctuation">,</span> newValue</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token keyword">function</span> <span class="token function">_insert</span><span class="token punctuation">(</span><span class="token parameter">node<span class="token punctuation">,</span> curIndex</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>curIndex <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> index <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token comment">// \u6539\u53D8\u94FE\u8868\u7B2C\u4E00\u4E2A\u8282\u70B9\u5373\u6539\u53D8\u6574\u4E2A\u5217\u8868\uFF0C\u5C06\u8FD4\u56DE\u4E00\u4E2A\u65B0\u94FE\u8868</span>
   <span class="token keyword">var</span> newNode <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token punctuation">(</span>newValue<span class="token punctuation">)</span>
   newNode<span class="token punctuation">.</span>next <span class="token operator">=</span> node
   <span class="token keyword">return</span> newNode
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>curIndex <span class="token operator">===</span> index <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token keyword">var</span> nextNode <span class="token operator">=</span> node<span class="token punctuation">.</span>next
   <span class="token keyword">var</span> newNode <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token punctuation">(</span>newValue<span class="token punctuation">)</span>
   newNode<span class="token punctuation">.</span>next <span class="token operator">=</span> nextNode
   node<span class="token punctuation">.</span>next <span class="token operator">=</span> newNode
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>node<span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token keyword">return</span> <span class="token boolean">false</span>
  <span class="token punctuation">}</span>
  <span class="token function">_insert</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>next<span class="token punctuation">,</span> curIndex <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>
 <span class="token punctuation">}</span>
 <span class="token keyword">return</span> <span class="token function">_insert</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token function">insert</span><span class="token punctuation">(</span>node1<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">999</span><span class="token punctuation">)</span>
<span class="token function">print</span><span class="token punctuation">(</span>node1<span class="token punctuation">)</span>
<span class="token comment">// 3</span>
<span class="token comment">// 5</span>
<span class="token comment">// 999</span>
<span class="token comment">// 8</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>7.\u5728\u94FE\u8868\u672B\u5C3E\u52A0\u5165\u4E00\u4E2A\u65B0\u8282\u70B9</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5728\u94FE\u8868\u672B\u5C3E\u52A0\u5165\u4E00\u4E2A\u65B0\u8282\u70B9</span>
<span class="token keyword">function</span> <span class="token function">append</span><span class="token punctuation">(</span><span class="token parameter">root<span class="token punctuation">,</span> newValue</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token keyword">function</span> <span class="token function">_append</span><span class="token punctuation">(</span><span class="token parameter">node</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>node<span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token keyword">return</span> <span class="token boolean">false</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>next <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token keyword">var</span> newNode <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token punctuation">(</span>newValue<span class="token punctuation">)</span>
   newNode<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">null</span>
   node<span class="token punctuation">.</span>next <span class="token operator">=</span> newNode
   <span class="token keyword">return</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token function">_append</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>next<span class="token punctuation">)</span>
 <span class="token punctuation">}</span>
 <span class="token keyword">return</span> <span class="token function">_append</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token function">append</span><span class="token punctuation">(</span>node1<span class="token punctuation">,</span> <span class="token number">888</span><span class="token punctuation">)</span>
<span class="token function">print</span><span class="token punctuation">(</span>node1<span class="token punctuation">)</span>
<span class="token comment">// 3</span>
<span class="token comment">// 5</span>
<span class="token comment">// 8</span>
<span class="token comment">// 888</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>8.\u5220\u9664\u4E00\u4E2A\u94FE\u8868\u8282\u70B9</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5220\u9664\u4E00\u4E2A\u5217\u8868\u8282\u70B9</span>
<span class="token keyword">function</span> <span class="token function">remove</span><span class="token punctuation">(</span><span class="token parameter">root<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token keyword">function</span> <span class="token function">_remove</span><span class="token punctuation">(</span><span class="token parameter">node<span class="token punctuation">,</span> curIndex</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>curIndex <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> index <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token comment">// \u5220\u9664\u94FE\u8868\u7B2C\u4E00\u4E2A\u8282\u70B9\uFF0C\u8FD4\u56DE\u7B2C\u4E8C\u4E2A\u8282\u70B9</span>
   <span class="token keyword">return</span> node<span class="token punctuation">.</span>next
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>curIndex <span class="token operator">===</span> index <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   node<span class="token punctuation">.</span>next <span class="token operator">=</span> node<span class="token punctuation">.</span>next<span class="token punctuation">.</span>next
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>node<span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token keyword">return</span> <span class="token boolean">false</span>
  <span class="token punctuation">}</span>
  <span class="token function">_remove</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>next<span class="token punctuation">,</span> curIndex <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>
 <span class="token punctuation">}</span>
 <span class="token keyword">return</span> <span class="token function">_remove</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>9.\u94FE\u8868\u5012\u5E8F</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u94FE\u8868\u5012\u5E8F</span>
<span class="token keyword">function</span> <span class="token function">reverse</span><span class="token punctuation">(</span><span class="token parameter">root</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>root <span class="token operator">||</span> <span class="token operator">!</span>root<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u6CA1\u6709\u8282\u70B9,\u6216\u8005\u53EA\u6709\u4E00\u4E2A\u8282\u70B9</span>
  <span class="token keyword">return</span> root
 <span class="token punctuation">}</span>
 <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>root<span class="token punctuation">.</span>next<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u4E24\u4E2A\u8282\u70B9</span>
  <span class="token keyword">var</span> temp <span class="token operator">=</span> root<span class="token punctuation">.</span>next
  temp<span class="token punctuation">.</span>next <span class="token operator">=</span> root
  root<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">null</span>
  <span class="token keyword">return</span> temp
 <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5927\u4E8E\u4E24\u4E2A\u8282\u70B9</span>
  <span class="token keyword">var</span> temp <span class="token operator">=</span> <span class="token function">reverse</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>next<span class="token punctuation">)</span>
  root<span class="token punctuation">.</span>next<span class="token punctuation">.</span>next <span class="token operator">=</span> root
  root<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">null</span>
  <span class="token keyword">return</span> temp
 <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,50),o=[t];function c(l,i){return s(),a("div",null,o)}var r=n(p,[["render",c],["__file","linear.html.vue"]]);export{r as default};
