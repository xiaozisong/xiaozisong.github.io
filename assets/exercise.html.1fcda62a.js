import{_ as p,o,c,a as s,b as n,d as t,e,r as l}from"./app.1fa09df8.js";const i={},r=s("h1",{id:"ts-\u7EC3\u4E60\u9898",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#ts-\u7EC3\u4E60\u9898","aria-hidden":"true"},"#"),n(" TS \u7EC3\u4E60\u9898")],-1),u={href:"https://github.com/semlinker/awesome-typescript/issues?page=2&q=is%3Aissue+is%3Aopen",target:"_blank",rel:"noopener noreferrer"},k=e(`<h2 id="\u7B2C\u4E00\u9898" tabindex="-1"><a class="header-anchor" href="#\u7B2C\u4E00\u9898" aria-hidden="true">#</a> \u7B2C\u4E00\u9898</h2><h3 id="\u9898\u76EE" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE" aria-hidden="true">#</a> \u9898\u76EE</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">User</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  id<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  kind<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">makeCustomer</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> User<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>u<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token punctuation">{</span>
  <span class="token comment">// Error\uFF08TS \u7F16\u8BD1\u5668\u7248\u672C\uFF1Av4.4.2\uFF09</span>
  <span class="token comment">// Type &#39;{ id: number; kind: string; }&#39; is not assignable to type &#39;T&#39;.</span>
  <span class="token comment">// &#39;{ id: number; kind: string; }&#39; is assignable to the constraint of type &#39;T&#39;, </span>
  <span class="token comment">// but &#39;T&#39; could be instantiated with a different subtype of constraint &#39;User&#39;.</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    id<span class="token operator">:</span> u<span class="token punctuation">.</span>id<span class="token punctuation">,</span>
    kind<span class="token operator">:</span> <span class="token string">&#39;customer&#39;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4EE5\u4E0A\u4EE3\u7801\u4E3A\u4EC0\u4E48\u4F1A\u63D0\u793A\u9519\u8BEF\uFF0C\u5E94\u8BE5\u5982\u4F55\u89E3\u51B3\u4E0A\u8FF0\u95EE\u9898\uFF1F</p><h3 id="\u89E3\u7B54" tabindex="-1"><a class="header-anchor" href="#\u89E3\u7B54" aria-hidden="true">#</a> \u89E3\u7B54</h3><p>\u4E3A\u4EC0\u4E48\u62A5\u9519\uFF1F</p><ul><li>\u56E0\u4E3A <code>T</code> \u517C\u5BB9 <code>User</code> \u7C7B\u578B\uFF0C\u5373\u5305\u542B\u4F46\u4E0D\u9650\u4E8E <code>User</code> \u7C7B\u578B\uFF0C\u6240\u4EE5\u8FD4\u56DE\u4E3A <code>T</code> \u7C7B\u578B\u53EF\u80FD\u4E0D\u4EC5\u4EC5\u53EA\u6709 <code>id</code> \u548C <code>kind</code>\uFF0C\u6240\u4EE5\u8981\u4E48\u4FEE\u6539\u8FD4\u56DE\u503C\u7C7B\u578B\uFF0C\u8981\u4E48\u5C31\u4FEE\u6539\u8FD4\u56DE\u503C</li></ul><ol><li>\u4FEE\u6539\u8FD4\u56DE\u503C\u7C7B\u578B:</li></ol><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">User</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  id<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  kind<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">makeCustomer</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> User<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>u<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> User <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    id<span class="token operator">:</span> u<span class="token punctuation">.</span>id<span class="token punctuation">,</span>
    kind<span class="token operator">:</span> <span class="token string">&#39;customer&#39;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>\u4FEE\u6539\u8FD4\u56DE\u503C\uFF1A</li></ol><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">User</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  id<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  kind<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">makeCustomer</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> User<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>u<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>u<span class="token punctuation">,</span>
    id<span class="token operator">:</span> u<span class="token punctuation">.</span>id<span class="token punctuation">,</span>
    kind<span class="token operator">:</span> <span class="token string">&#39;customer&#39;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u7B2C\u4E8C\u9898" tabindex="-1"><a class="header-anchor" href="#\u7B2C\u4E8C\u9898" aria-hidden="true">#</a> \u7B2C\u4E8C\u9898</h2><h3 id="\u9898\u76EE-1" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE-1" aria-hidden="true">#</a> \u9898\u76EE</h3><p>\u672C\u9053\u9898\u6211\u4EEC\u5E0C\u671B\u53C2\u6570 a \u548C b \u7684\u7C7B\u578B\u90FD\u662F\u4E00\u81F4\u7684\uFF0C\u5373 a \u548C b \u540C\u65F6\u4E3A number \u6216 string \u7C7B\u578B\u3002\u5F53\u5B83\u4EEC\u7684\u7C7B\u578B\u4E0D\u4E00\u81F4\u7684\u503C\uFF0CTS \u7C7B\u578B\u68C0\u67E5\u5668\u80FD\u81EA\u52A8\u63D0\u793A\u5BF9\u5E94\u7684\u9519\u8BEF\u4FE1\u606F\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">f</span><span class="token punctuation">(</span>a<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">,</span> b<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> a <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> a <span class="token operator">+</span> <span class="token string">&#39;:&#39;</span> <span class="token operator">+</span> b<span class="token punctuation">;</span> <span class="token comment">// no error but b can be number!</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> a <span class="token operator">+</span> b<span class="token punctuation">;</span> <span class="token comment">// error as b can be number | string</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token function">f</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Ok</span>
<span class="token function">f</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Error</span>
<span class="token function">f</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Error</span>
<span class="token function">f</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">)</span> <span class="token comment">// Ok</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u89E3\u7B54-1" tabindex="-1"><a class="header-anchor" href="#\u89E3\u7B54-1" aria-hidden="true">#</a> \u89E3\u7B54</h3><ol><li>\u4F7F\u7528\u51FD\u6570\u91CD\u8F7D:</li></ol><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">f</span><span class="token punctuation">(</span>a<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> b<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">f</span><span class="token punctuation">(</span>a<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> b<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">f</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> a <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> a <span class="token operator">+</span> <span class="token string">&#39;:&#39;</span> <span class="token operator">+</span> b<span class="token punctuation">;</span> <span class="token comment">// no error but b can be number!</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> a <span class="token operator">+</span> b<span class="token punctuation">;</span> <span class="token comment">// error as b can be number | string</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token function">f</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Ok</span>
<span class="token function">f</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Error</span>
<span class="token function">f</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Error</span>
<span class="token function">f</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">)</span> <span class="token comment">// Ok</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>\u6CDB\u578B\u89E3\u51B3</li></ol><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">f</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>a<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> b<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> a <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> a <span class="token operator">+</span> <span class="token string">&#39;:&#39;</span> <span class="token operator">+</span> b<span class="token punctuation">;</span> <span class="token comment">// no error but b can be number!</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>a <span class="token keyword">as</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>b <span class="token keyword">as</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// error as b can be number | string</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token function">f</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Ok</span>
<span class="token function">f</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Error</span>
<span class="token function">f</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Error</span>
<span class="token function">f</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">)</span> <span class="token comment">// Ok</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u7B2C\u4E09\u9898" tabindex="-1"><a class="header-anchor" href="#\u7B2C\u4E09\u9898" aria-hidden="true">#</a> \u7B2C\u4E09\u9898</h2><h3 id="\u9898\u76EE-2" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE-2" aria-hidden="true">#</a> \u9898\u76EE</h3>`,22),d={href:"https://mp.weixin.qq.com/s?__biz=MzI2MjcxNTQ0Nw==&mid=2247484142&idx=1&sn=946ba90d10e2625513f09e60a462b3a7&chksm=ea47a3b6dd302aa05af716d0bd70d8d7c682c9f4527a9a0c03cd107635711c394ab155127f9e&scene=21#wechat_redirect",target:"_blank",rel:"noopener noreferrer"},m=s("code",null,"Partial<T>",-1),v=s("code",null,"?",-1),b=e(`<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">Todo</span> <span class="token punctuation">{</span>
  title<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  description<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">updateTodo</span><span class="token punctuation">(</span>todo<span class="token operator">:</span> Todo<span class="token punctuation">,</span> fieldsToUpdate<span class="token operator">:</span> Partial<span class="token operator">&lt;</span>Todo<span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token operator">...</span>todo<span class="token punctuation">,</span> <span class="token operator">...</span>fieldsToUpdate <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// lib.es5.d.ts</span>
<span class="token keyword">type</span> <span class="token class-name">Partial<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span><span class="token constant">P</span> <span class="token keyword">in</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">]</span><span class="token operator">?</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">P</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u90A3\u4E48\u5982\u4F55\u5B9A\u4E49\u4E00\u4E2A <code>SetOptional</code> \u5DE5\u5177\u7C7B\u578B\uFF0C\u652F\u6301\u628A\u7ED9\u5B9A\u7684 keys \u5BF9\u5E94\u7684\u5C5E\u6027\u53D8\u6210\u53EF\u9009\u7684\uFF1F\u5BF9\u5E94\u7684\u4F7F\u7528\u793A\u4F8B\u5982\u4E0B\u6240\u793A\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Foo</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
	a<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
	b<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
	c<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6D4B\u8BD5\u7528\u4F8B</span>
<span class="token keyword">type</span> <span class="token class-name">SomeOptional</span> <span class="token operator">=</span> SetOptional<span class="token operator">&lt;</span>Foo<span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;b&#39;</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>

<span class="token comment">// type SomeOptional = {</span>
<span class="token comment">// 	a?: number; // \u8BE5\u5C5E\u6027\u5DF2\u53D8\u6210\u53EF\u9009\u7684</span>
<span class="token comment">// 	b?: string; // \u4FDD\u6301\u4E0D\u53D8</span>
<span class="token comment">// 	c: boolean; </span>
<span class="token comment">// }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u5B9E\u73B0 <code>SetOptional</code> \u5DE5\u5177\u7C7B\u578B\u4E4B\u540E\uFF0C\u5982\u679C\u4F60\u611F\u5174\u8DA3\uFF0C\u53EF\u4EE5\u7EE7\u7EED\u5B9E\u73B0 <code>SetRequired</code> \u5DE5\u5177\u7C7B\u578B\uFF0C\u5229\u7528\u5B83\u53EF\u4EE5\u628A\u6307\u5B9A\u7684 keys \u5BF9\u5E94\u7684\u5C5E\u6027\u53D8\u6210\u5FC5\u586B\u7684\u3002\u5BF9\u5E94\u7684\u4F7F\u7528\u793A\u4F8B\u5982\u4E0B\u6240\u793A\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Foo</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
	a<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
	b<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
	c<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6D4B\u8BD5\u7528\u4F8B</span>
<span class="token keyword">type</span> <span class="token class-name">SomeRequired</span> <span class="token operator">=</span> SetRequired<span class="token operator">&lt;</span>Foo<span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;c&#39;</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token comment">// type SomeRequired = {</span>
<span class="token comment">// 	a?: number;</span>
<span class="token comment">// 	b: string; // \u4FDD\u6301\u4E0D\u53D8</span>
<span class="token comment">// 	c: boolean; // \u8BE5\u5C5E\u6027\u5DF2\u53D8\u6210\u5FC5\u586B</span>
<span class="token comment">// }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u89E3\u7B54-2" tabindex="-1"><a class="header-anchor" href="#\u89E3\u7B54-2" aria-hidden="true">#</a> \u89E3\u7B54</h3><p><code>SetOptional</code> \u601D\u8DEF\uFF1A</p><ul><li>\u5148\u4F7F\u7528 <code>Omit&lt;Foo, &#39;a&#39; | &#39;b&#39;&gt;</code> \u5F97\u5230\u6392\u9664\u4E86 <code>a | b</code> \u7684 <code>Foo</code>\uFF0C\u518D\u4F7F\u7528 <code>Partial&lt;Pick&lt;Foo, &#39;a&#39; | &#39;b&#39;&gt;&gt;</code> \u5C06 <code>Foo</code> \u4E2D\u7684 <code>a | b</code> \u8BBE\u7F6E\u4E3A\u53EF\u9009\uFF0C\u6700\u540E\u5C06\u4E24\u79CD\u7C7B\u578B\u5408\u5E76 <code>&amp;</code> \u8FD4\u56DE\u5373\u53EF\u3002</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">SetOptional<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">K</span> <span class="token keyword">extends</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> Omit<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">K</span><span class="token operator">&gt;</span> <span class="token operator">&amp;</span> Partial<span class="token operator">&lt;</span>Pick<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">K</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>SetRequired</code> \u601D\u8DEF\uFF1A</p><ul><li>\u540C <code>SetOptional</code>\uFF0C\u53EA\u4E0D\u8FC7\u5C06\u540E\u9762\u7684 <code>Partial</code> \u6539\u4E3A <code>Required</code> \u5373\u53EF\u3002</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">SetRequired<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">K</span> <span class="token keyword">extends</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> Omit<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">K</span><span class="token operator">&gt;</span> <span class="token operator">&amp;</span> Required<span class="token operator">&lt;</span>Pick<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">K</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="\u7B2C\u56DB\u9898" tabindex="-1"><a class="header-anchor" href="#\u7B2C\u56DB\u9898" aria-hidden="true">#</a> \u7B2C\u56DB\u9898</h2><h3 id="\u9898\u76EE-3" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE-3" aria-hidden="true">#</a> \u9898\u76EE</h3><p><code>Pick&lt;T, K extends keyof T&gt;</code> \u7684\u4F5C\u7528\u662F\u5C06\u67D0\u4E2A\u7C7B\u578B\u4E2D\u7684\u5B50\u5C5E\u6027\u6311\u51FA\u6765\uFF0C\u53D8\u6210\u5305\u542B\u8FD9\u4E2A\u7C7B\u578B\u90E8\u5206\u5C5E\u6027\u7684\u5B50\u7C7B\u578B\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">Todo</span> <span class="token punctuation">{</span>
  title<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  description<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  completed<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> <span class="token class-name">TodoPreview</span> <span class="token operator">=</span> Pick<span class="token operator">&lt;</span>Todo<span class="token punctuation">,</span> <span class="token string">&quot;title&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;completed&quot;</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> todo<span class="token operator">:</span> TodoPreview <span class="token operator">=</span> <span class="token punctuation">{</span>
  title<span class="token operator">:</span> <span class="token string">&quot;Clean room&quot;</span><span class="token punctuation">,</span>
  completed<span class="token operator">:</span> <span class="token boolean">false</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u90A3\u4E48\u5982\u4F55\u5B9A\u4E49\u4E00\u4E2A <code>ConditionalPick</code> \u5DE5\u5177\u7C7B\u578B\uFF0C\u652F\u6301\u6839\u636E\u6307\u5B9A\u7684 <code>Condition</code> \u6761\u4EF6\u6765\u751F\u6210\u65B0\u7684\u7C7B\u578B\uFF0C\u5BF9\u5E94\u7684\u4F7F\u7528\u793A\u4F8B\u5982\u4E0B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">Example</span> <span class="token punctuation">{</span>
	a<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
	b<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
	<span class="token function-variable function">c</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
	d<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6D4B\u8BD5\u7528\u4F8B\uFF1A</span>
<span class="token keyword">type</span> <span class="token class-name">StringKeysOnly</span> <span class="token operator">=</span> ConditionalPick<span class="token operator">&lt;</span>Example<span class="token punctuation">,</span> <span class="token builtin">string</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token comment">//=&gt; {a: string}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u89E3\u7B54-3" tabindex="-1"><a class="header-anchor" href="#\u89E3\u7B54-3" aria-hidden="true">#</a> \u89E3\u7B54</h3><ul><li><p><code>[K in keyof T as (T[K] extends U ? K : never)]</code>: \u8FD9\u91CC\u4F7F\u7528 <code>as</code> \u5DE7\u5999\u7684\u5BF9 <code>T[K]</code> \u8FDB\u884C\u4E8C\u6B21\u5224\u65AD\uFF0C\u4F7F <code>:</code> \u5DE6\u8FB9\u8FD4\u56DE\u7B26\u5408 <code>T[K] extends U</code> \u7684 <code>K</code>\uFF1B</p></li><li><p>\u8FD8\u6709\u4E00\u4E2A\u77E5\u8BC6\u70B9\uFF1A\u5F53 key \u4E3A <code>never</code> <code>null</code> \u548C <code>undefined</code> \u65F6\u4E0D\u4F1A\u751F\u6548\u3002</p></li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">ConditionalPick<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">U</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span><span class="token constant">K</span> <span class="token keyword">in</span> <span class="token keyword">keyof</span> <span class="token constant">T</span> <span class="token keyword">as</span> <span class="token punctuation">(</span><span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">K</span><span class="token punctuation">]</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token constant">U</span></span> <span class="token operator">?</span> <span class="token constant">K</span> <span class="token operator">:</span> <span class="token builtin">never</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">K</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>

<span class="token keyword">interface</span> <span class="token class-name">Example</span> <span class="token punctuation">{</span>
	a<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
	b<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
	<span class="token function-variable function">c</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
	d<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6D4B\u8BD5\u7528\u4F8B\uFF1A</span>
<span class="token keyword">type</span> <span class="token class-name">StringKeysOnly</span> <span class="token operator">=</span> ConditionalPick<span class="token operator">&lt;</span>Example<span class="token punctuation">,</span> <span class="token builtin">string</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token comment">//=&gt; {a: string}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u7B2C\u4E94\u9898" tabindex="-1"><a class="header-anchor" href="#\u7B2C\u4E94\u9898" aria-hidden="true">#</a> \u7B2C\u4E94\u9898</h2><h3 id="\u9898\u76EE-4" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE-4" aria-hidden="true">#</a> \u9898\u76EE</h3><p>\u5B9A\u4E49\u4E00\u4E2A\u5DE5\u5177\u7C7B\u578B <code>AppendArgument</code>\uFF0C\u4E3A\u5DF2\u6709\u7684\u51FD\u6570\u7C7B\u578B\u589E\u52A0\u6307\u5B9A\u7C7B\u578B\u7684\u53C2\u6570\uFF0C\u65B0\u589E\u7684\u53C2\u6570\u540D\u662F <code>x</code>\uFF0C\u5C06\u4F5C\u4E3A\u65B0\u51FD\u6570\u7C7B\u578B\u7684\u7B2C\u4E00\u4E2A\u53C2\u6570\u3002\u5177\u4F53\u7684\u4F7F\u7528\u793A\u4F8B\u5982\u4E0B\u6240\u793A\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Fn</span> <span class="token operator">=</span> <span class="token punctuation">(</span>a<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> b<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">number</span>
<span class="token keyword">type</span> <span class="token class-name">AppendArgument<span class="token operator">&lt;</span><span class="token constant">F</span><span class="token punctuation">,</span> <span class="token constant">A</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token comment">// \u4F60\u7684\u5B9E\u73B0\u4EE3\u7801</span>

<span class="token keyword">type</span> <span class="token class-name">FinalFn</span> <span class="token operator">=</span> AppendArgument<span class="token operator">&lt;</span>Fn<span class="token punctuation">,</span> <span class="token builtin">boolean</span><span class="token operator">&gt;</span> 
<span class="token comment">// (x: boolean, a: number, b: string) =&gt; number</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u89E3\u7B54-4" tabindex="-1"><a class="header-anchor" href="#\u89E3\u7B54-4" aria-hidden="true">#</a> \u89E3\u7B54</h3><ol><li>\u4F7F\u7528 <code>Parameters&lt;F&gt;</code> \u548C <code>ReturnType&lt;F&gt;</code> \u5DE5\u5177\u7C7B\u578B\u63D0\u53D6\u51FA <code>Fn</code> \u51FD\u6570\u7C7B\u578B\u7684\u53C2\u6570\u7C7B\u578B\u548C\u8FD4\u56DE\u503C\u7C7B\u578B\uFF0C\u518D\u4E0E <code>x: A</code> \u7EC4\u5408\u6210\u65B0\u7684\u7C7B\u578B\u5373\u53EF</li></ol><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u4F7F\u7528 Parameters&lt;F&gt; \u548C ReturnType&lt;F&gt; \u5DE5\u5177\u7C7B\u578B</span>
<span class="token keyword">type</span> <span class="token class-name">AppendArgument<span class="token operator">&lt;</span><span class="token constant">F</span> <span class="token keyword">extends</span> <span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span></span> <span class="token builtin">any</span><span class="token punctuation">,</span> <span class="token constant">A</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token constant">A</span><span class="token punctuation">,</span> <span class="token operator">...</span>args<span class="token operator">:</span> Parameters<span class="token operator">&lt;</span><span class="token constant">F</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> ReturnType<span class="token operator">&lt;</span><span class="token constant">F</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name">Fn</span> <span class="token operator">=</span> <span class="token punctuation">(</span>a<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> b<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">number</span>

<span class="token keyword">type</span> <span class="token class-name">FinalFn</span> <span class="token operator">=</span> AppendArgument<span class="token operator">&lt;</span>Fn<span class="token punctuation">,</span> <span class="token builtin">boolean</span><span class="token operator">&gt;</span> 
<span class="token comment">// (x: boolean, a: number, b: string) =&gt; number</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>\u4F7F\u7528 <code>infer</code>\uFF0C\u56E0\u4E3A <code>Parameters</code> \u548C <code>ReturnType</code> \u90FD\u662F\u901A\u8FC7 <code>infer</code> \u5B9E\u73B0\u7684\uFF1B\u8FD9\u91CC\u76F4\u63A5\u4F7F\u7528 <code>infer</code>\uFF0C\u5728\u4E00\u4E2A\u51FD\u6570\u7C7B\u578B\u91CC\u58F0\u660E\u4E86\u4E24\u4E2A\u53D8\u91CF\uFF0C\u5373\u53EF\u540C\u65F6\u6536\u96C6\u53C2\u6570\u7C7B\u578B\u548C\u8FD4\u56DE\u503C\u7C7B\u578B</li></ol><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u4F7F\u7528 infer</span>
<span class="token keyword">type</span> <span class="token class-name">AppendArgument<span class="token operator">&lt;</span><span class="token constant">F</span> <span class="token keyword">extends</span> <span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span></span> <span class="token builtin">any</span><span class="token punctuation">,</span> <span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token constant">F</span> <span class="token keyword">extends</span> <span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token keyword">infer</span> <span class="token constant">P</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">infer</span> <span class="token constant">R</span> <span class="token operator">?</span> <span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> <span class="token operator">...</span>args<span class="token operator">:</span> <span class="token constant">P</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token constant">R</span> <span class="token operator">:</span> <span class="token builtin">never</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name">Fn</span> <span class="token operator">=</span> <span class="token punctuation">(</span>a<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> b<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">number</span>

<span class="token keyword">type</span> <span class="token class-name">FinalFn</span> <span class="token operator">=</span> AppendArgument<span class="token operator">&lt;</span>Fn<span class="token punctuation">,</span> <span class="token builtin">boolean</span><span class="token operator">&gt;</span> 
<span class="token comment">// (x: boolean, a: number, b: string) =&gt; number</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u7B2C\u516D\u9898" tabindex="-1"><a class="header-anchor" href="#\u7B2C\u516D\u9898" aria-hidden="true">#</a> \u7B2C\u516D\u9898</h2><h3 id="\u9898\u76EE-5" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE-5" aria-hidden="true">#</a> \u9898\u76EE</h3><p>\u5B9A\u4E49\u4E00\u4E2A <code>NativeFlat</code> \u5DE5\u5177\u7C7B\u578B\uFF0C\u652F\u6301\u628A\u6570\u7EC4\u7C7B\u578B\u62CD\u5E73\uFF08\u6241\u5E73\u5316\uFF09\u3002\u5177\u4F53\u7684\u4F7F\u7528\u793A\u4F8B\u5982\u4E0B\u6240\u793A\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">NaiveFlat<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token comment">// \u4F60\u7684\u5B9E\u73B0\u4EE3\u7801</span>

<span class="token comment">// \u6D4B\u8BD5\u7528\u4F8B\uFF1A</span>
<span class="token keyword">type</span> <span class="token class-name">NaiveResult</span> <span class="token operator">=</span> NaiveFlat<span class="token operator">&lt;</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;d&#39;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">&gt;</span>
<span class="token comment">// NaiveResult\u7684\u7ED3\u679C\uFF1A &quot;a&quot; | &quot;b&quot; | &quot;c&quot; | &quot;d&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u5B8C\u6210 <code>NaiveFlat</code> \u5DE5\u5177\u7C7B\u578B\u4E4B\u540E\uFF0C\u5728\u7EE7\u7EED\u5B9E\u73B0 <code>DeepFlat</code> \u5DE5\u5177\u7C7B\u578B\uFF0C\u4EE5\u652F\u6301\u591A\u7EF4\u6570\u7EC4\u7C7B\u578B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">DeepFlat<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token builtin">unknown</span> <span class="token comment">// \u4F60\u7684\u5B9E\u73B0\u4EE3\u7801</span>

<span class="token comment">// \u6D4B\u8BD5\u7528\u4F8B</span>
<span class="token keyword">type</span> <span class="token class-name">Deep</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">&#39;d&#39;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">&#39;e&#39;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name">DeepTestResult</span> <span class="token operator">=</span> DeepFlat<span class="token operator">&lt;</span>Deep<span class="token operator">&gt;</span>  
<span class="token comment">// DeepTestResult: &quot;a&quot; | &quot;b&quot; | &quot;c&quot; | &quot;d&quot; | &quot;e&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u77E5\u8BC6\u70B9\u94FA\u57AB" tabindex="-1"><a class="header-anchor" href="#\u77E5\u8BC6\u70B9\u94FA\u57AB" aria-hidden="true">#</a> \u77E5\u8BC6\u70B9\u94FA\u57AB</h3><ol><li><code>[&#39;a&#39;, &#39;b&#39;, &#39;c&#39;][number]</code> \u53EF\u4EE5\u53D6\u51FA <code>&quot;a&quot; | &quot;b&quot; | &quot;c&quot;</code>\u3002\u6F14\u53D8\u8FC7\u7A0B\u5982\u4E0B\uFF1A</li></ol><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u4F7F\u7528\u4E0B\u6807\u53D6\u6570\u7EC4\u5143\u7D20</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">A</span></span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token comment">// type A = &quot;a&quot;</span>

<span class="token comment">// | \u53EF\u4EE5\u53D6\u591A\u4E2A\u4E0B\u6807</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">B</span></span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span> <span class="token operator">|</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token comment">// type B = &quot;a&quot; | &quot;b&quot;</span>

<span class="token comment">// number \u8868\u793A\u53D6\u6240\u6709\u4E0B\u6807\uFF0C\u5373\u53D6\u51FA\u6570\u7EC4\u4E2D\u6240\u6709\u7684\u7C7B\u578B</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">C</span></span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token builtin">number</span><span class="token punctuation">]</span> <span class="token comment">// type C = &quot;a&quot; | &quot;b&quot; | &quot;c&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li><code>{[K in keyof [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;]]}</code> \u5F97\u5230 <code>{0: &#39;a&#39;, 1: &#39;b&#39;, 2: &#39;c&#39;, length: 3, ...}</code>, \u518D\u52A0\u4E0A <code>[number]</code> \u5C31\u53EF\u4EE5\u63D0\u53D6\u51FA\u6570\u7EC4\u7684\u8054\u5408\u7C7B\u578B\uFF1A</li></ol><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">StringArr</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token comment">// \u6839\u636E\u6570\u7EC4\u7C7B\u578B\u751F\u6210\u5BF9\u8C61\u7C7B\u578B</span>
<span class="token keyword">type</span> <span class="token class-name">KeyofArrMap</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span><span class="token constant">K</span> <span class="token keyword">in</span> <span class="token keyword">keyof</span> StringArr<span class="token punctuation">]</span><span class="token operator">:</span> StringArr<span class="token punctuation">[</span><span class="token constant">K</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
<span class="token comment">/* \u8FD9\u91CC\u4F1A\u5C06 Array \u7684\u5C5E\u6027\u90FD\u66B4\u9732\u51FA\u6765
type KeyofArrMap = {
    [x: number]: &quot;a&quot; | &quot;b&quot; | &quot;c&quot;;
    0: &quot;a&quot;;
    1: &quot;b&quot;;
    2: &quot;c&quot;;
    length: 3;
    toString: () =&gt; string;
    toLocaleString: () =&gt; string;
    pop: () =&gt; &quot;a&quot; | &quot;b&quot; | &quot;c&quot;;
    ...
}
*/</span>

<span class="token comment">// \u52A0\u4E0A [number] \u5373\u53EF\u5C06\u6240\u6709\u6570\u5B57\u6240\u6709\u5BF9\u5E94\u7684\u503C\u63D0\u53D6\u51FA\u6765</span>
<span class="token keyword">type</span> <span class="token class-name">KeyofArrType</span> <span class="token operator">=</span> KeyofArrMap<span class="token punctuation">[</span><span class="token builtin">number</span><span class="token punctuation">]</span> <span class="token comment">// type KeyofArrType = &quot;a&quot; | &quot;b&quot; | &quot;c&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u89E3\u7B54-5" tabindex="-1"><a class="header-anchor" href="#\u89E3\u7B54-5" aria-hidden="true">#</a> \u89E3\u7B54</h3><p><code>NaiveFlat</code> \u5B9E\u73B0\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">NaiveFlat<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span><span class="token constant">P</span> <span class="token keyword">in</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">P</span><span class="token punctuation">]</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">any</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">?</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">P</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token builtin">number</span><span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">P</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">[</span><span class="token builtin">number</span><span class="token punctuation">]</span>

<span class="token comment">// \u6D4B\u8BD5\u7528\u4F8B\uFF1A</span>
<span class="token keyword">type</span> <span class="token class-name">NaiveResult</span> <span class="token operator">=</span> NaiveFlat<span class="token operator">&lt;</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;d&#39;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">&gt;</span>
<span class="token comment">// NaiveResult\u7684\u7ED3\u679C\uFF1A &quot;a&quot; | &quot;b&quot; | &quot;c&quot; | &quot;d&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>DeepFlat</code> \u5B9E\u73B0\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">DeepFlat<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span><span class="token constant">P</span> <span class="token keyword">in</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">P</span><span class="token punctuation">]</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">any</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">?</span> DeepFlat<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">P</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> <span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">P</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">[</span><span class="token builtin">number</span><span class="token punctuation">]</span>

<span class="token comment">// \u6D4B\u8BD5\u7528\u4F8B</span>
<span class="token keyword">type</span> <span class="token class-name">Deep</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">&#39;d&#39;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">&#39;e&#39;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name">DeepTestResult</span> <span class="token operator">=</span> DeepFlat<span class="token operator">&lt;</span>Deep<span class="token operator">&gt;</span>  
<span class="token comment">// DeepTestResult: &quot;a&quot; | &quot;b&quot; | &quot;c&quot; | &quot;d&quot; | &quot;e&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u7B2C\u4E03\u9898" tabindex="-1"><a class="header-anchor" href="#\u7B2C\u4E03\u9898" aria-hidden="true">#</a> \u7B2C\u4E03\u9898</h2><h3 id="\u9898\u76EE-6" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE-6" aria-hidden="true">#</a> \u9898\u76EE</h3><p>\u4F7F\u7528\u7C7B\u578B\u522B\u540D\u5B9A\u4E49\u4E00\u4E2A <code>EmptyObject</code> \u7C7B\u578B\uFF0C\u4F7F\u5F97\u8BE5\u7C7B\u578B\u53EA\u5141\u8BB8\u7A7A\u5BF9\u8C61\u8D4B\u503C\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">EmptyObject</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> 

<span class="token comment">// \u6D4B\u8BD5\u7528\u4F8B</span>
<span class="token keyword">const</span> shouldPass<span class="token operator">:</span> EmptyObject <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment">// \u53EF\u4EE5\u6B63\u5E38\u8D4B\u503C</span>
<span class="token keyword">const</span> shouldFail<span class="token operator">:</span> EmptyObject <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token comment">// \u5C06\u51FA\u73B0\u7F16\u8BD1\u9519\u8BEF</span>
  prop<span class="token operator">:</span> <span class="token string">&quot;TS&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u901A\u8FC7 <code>EmptyObject</code> \u7C7B\u578B\u7684\u6D4B\u8BD5\u7528\u4F8B\u68C0\u6D4B\u540E\uFF0C\u6211\u4EEC\u6765\u66F4\u6539\u4EE5\u4E0B <code>takeSomeTypeOnly</code> \u51FD\u6570\u7684\u7C7B\u578B\u5B9A\u4E49\uFF0C\u8BA9\u5B83\u7684\u53C2\u6570\u53EA\u5141\u8BB8\u4E25\u683CSomeType\u7C7B\u578B\u7684\u503C\u3002\u5177\u4F53\u7684\u4F7F\u7528\u793A\u4F8B\u5982\u4E0B\u6240\u793A\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">SomeType</span> <span class="token operator">=</span>  <span class="token punctuation">{</span>
  prop<span class="token operator">:</span> <span class="token builtin">string</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u66F4\u6539\u4EE5\u4E0B\u51FD\u6570\u7684\u7C7B\u578B\u5B9A\u4E49\uFF0C\u8BA9\u5B83\u7684\u53C2\u6570\u53EA\u5141\u8BB8\u4E25\u683CSomeType\u7C7B\u578B\u7684\u503C</span>
<span class="token keyword">function</span> <span class="token function">takeSomeTypeOnly</span><span class="token punctuation">(</span>x<span class="token operator">:</span> SomeType<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> x <span class="token punctuation">}</span>

<span class="token comment">// \u6D4B\u8BD5\u7528\u4F8B\uFF1A</span>
<span class="token keyword">const</span> x <span class="token operator">=</span> <span class="token punctuation">{</span> prop<span class="token operator">:</span> <span class="token string">&#39;a&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token function">takeSomeTypeOnly</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token comment">// \u53EF\u4EE5\u6B63\u5E38\u8C03\u7528</span>

<span class="token keyword">const</span> y <span class="token operator">=</span> <span class="token punctuation">{</span> prop<span class="token operator">:</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> addditionalProp<span class="token operator">:</span> <span class="token string">&#39;x&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token function">takeSomeTypeOnly</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span> <span class="token comment">// \u5C06\u51FA\u73B0\u7F16\u8BD1\u9519\u8BEF</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u77E5\u8BC6\u70B9\u94FA\u57AB-1" tabindex="-1"><a class="header-anchor" href="#\u77E5\u8BC6\u70B9\u94FA\u57AB-1" aria-hidden="true">#</a> \u77E5\u8BC6\u70B9\u94FA\u57AB</h3><p><code>PropertyKey</code> \u7CFB\u7EDF\u5185\u7F6E\u7D22\u5F15\u7B7E\u540D\u53C2\u6570\u7C7B\u578B\uFF0C\u6E90\u7801\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">PropertyKey</span> <span class="token operator">=</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token builtin">symbol</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="\u89E3\u7B54-6" tabindex="-1"><a class="header-anchor" href="#\u89E3\u7B54-6" aria-hidden="true">#</a> \u89E3\u7B54</h3><p><code>EmptyObject</code></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">EmptyObject</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">// type PropertyKey = string | number | symbol</span>
  <span class="token punctuation">[</span><span class="token constant">K</span> <span class="token keyword">in</span> PropertyKey<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">never</span> 
<span class="token punctuation">}</span>

<span class="token comment">// \u6D4B\u8BD5\u7528\u4F8B</span>
<span class="token keyword">const</span> shouldPass<span class="token operator">:</span> EmptyObject <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment">// \u53EF\u4EE5\u6B63\u5E38\u8D4B\u503C</span>
<span class="token keyword">const</span> shouldFail<span class="token operator">:</span> EmptyObject <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token comment">// \u5C06\u51FA\u73B0\u7F16\u8BD1\u9519\u8BEF</span>
  prop<span class="token operator">:</span> <span class="token string">&quot;TS&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>takeSomeTypeOnly</code></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">SomeType</span> <span class="token operator">=</span>  <span class="token punctuation">{</span>
  prop<span class="token operator">:</span> <span class="token builtin">string</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u5C06 T2 \u4E2D\u548C T1 \u4E0D\u76F8\u540C\u7684 K \u8BBE\u7F6E\u4E3A never</span>
<span class="token keyword">type</span> <span class="token class-name">Exclusive<span class="token operator">&lt;</span><span class="token constant">T1</span><span class="token punctuation">,</span> <span class="token constant">T2</span> <span class="token keyword">extends</span> <span class="token constant">T1</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span><span class="token constant">K</span> <span class="token keyword">in</span> <span class="token keyword">keyof</span> <span class="token constant">T2</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token constant">K</span> <span class="token keyword">extends</span> <span class="token keyword">keyof</span> <span class="token constant">T1</span> <span class="token operator">?</span> <span class="token constant">T2</span><span class="token punctuation">[</span><span class="token constant">K</span><span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token builtin">never</span> 
<span class="token punctuation">}</span>

<span class="token comment">// \u66F4\u6539\u4EE5\u4E0B\u51FD\u6570\u7684\u7C7B\u578B\u5B9A\u4E49\uFF0C\u8BA9\u5B83\u7684\u53C2\u6570\u53EA\u5141\u8BB8\u4E25\u683CSomeType\u7C7B\u578B\u7684\u503C</span>
<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">takeSomeTypeOnly</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> SomeType<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>x<span class="token operator">:</span> Exclusive<span class="token operator">&lt;</span>SomeType<span class="token punctuation">,</span> <span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> x <span class="token punctuation">}</span>

<span class="token comment">// \u6D4B\u8BD5\u7528\u4F8B\uFF1A</span>
<span class="token keyword">const</span> x <span class="token operator">=</span> <span class="token punctuation">{</span> prop<span class="token operator">:</span> <span class="token string">&#39;a&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token function">takeSomeTypeOnly</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token comment">// \u53EF\u4EE5\u6B63\u5E38\u8C03\u7528</span>

<span class="token keyword">const</span> y <span class="token operator">=</span> <span class="token punctuation">{</span> prop<span class="token operator">:</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> addditionalProp<span class="token operator">:</span> <span class="token string">&#39;x&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token function">takeSomeTypeOnly</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span> <span class="token comment">// \u5C06\u51FA\u73B0\u7F16\u8BD1\u9519\u8BEF</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u7B2C\u516B\u9898" tabindex="-1"><a class="header-anchor" href="#\u7B2C\u516B\u9898" aria-hidden="true">#</a> \u7B2C\u516B\u9898</h2><h3 id="\u9898\u76EE-7" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE-7" aria-hidden="true">#</a> \u9898\u76EE</h3><p>\u5B9A\u4E49 <code>NonEmptyArray</code> \u5DE5\u5177\u7C7B\u578B\uFF0C\u7528\u4E8E\u786E\u4FDD\u6570\u636E\u975E\u7A7A\u6570\u7EC4\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">NonEmptyArray<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token comment">// \u4F60\u7684\u5B9E\u73B0\u4EE3\u7801</span>

<span class="token keyword">const</span> a<span class="token operator">:</span> NonEmptyArray<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token comment">// \u5C06\u51FA\u73B0\u7F16\u8BD1\u9519\u8BEF</span>
<span class="token keyword">const</span> b<span class="token operator">:</span> NonEmptyArray<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;Hello TS&#39;</span><span class="token punctuation">]</span> <span class="token comment">// \u975E\u7A7A\u6570\u636E\uFF0C\u6B63\u5E38\u4F7F\u7528</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u89E3\u7B54-7" tabindex="-1"><a class="header-anchor" href="#\u89E3\u7B54-7" aria-hidden="true">#</a> \u89E3\u7B54</h3><p>\u89E3\u6CD5\u4E00</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">NonEmptyArray<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token operator">...</span><span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u89E3\u6CD5\u4E8C</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">NonEmptyArray<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">&amp;</span> <span class="token punctuation">{</span> <span class="token number">0</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,69);function y(g,h){const a=l("ExternalLinkIcon");return o(),c("div",null,[r,s("p",null,[n("\u672C\u6587\u7528\u4E8E\u8BB0\u5F55\u6211\u5BF9 "),s("a",u,[n("\u300C\u91CD\u5B66TS 2.0 \u300D"),t(a)]),n(" \u7CFB\u5217\u7EC3\u4E60\u9898\u7684\u5B66\u4E60\u3002")]),k,s("p",null,[n("\u5728 "),s("a",d,[n("\u638C\u63E1 TS \u8FD9\u4E9B\u5DE5\u5177\u7C7B\u578B\uFF0C\u8BA9\u4F60\u5F00\u53D1\u4E8B\u534A\u529F\u500D"),t(a)]),n(" \u8FD9\u7BC7\u6587\u7AE0\u4E2D\uFF0C\u963F\u5B9D\u54E5\u4ECB\u7ECD\u4E86 TS \u5185\u7F6E\u7684\u5DE5\u5177\u7C7B\u578B\uFF1A"),m,n("\uFF0C\u5B83\u7684\u4F5C\u7528\u662F\u5C06\u67D0\u4E2A\u7C7B\u578B\u91CC\u7684\u5C5E\u6027\u5168\u90E8\u53D8\u4E3A\u53EF\u9009\u9879 "),v,n("\u3002")]),b])}var w=p(i,[["render",y],["__file","exercise.html.vue"]]);export{w as default};
