import{_ as t,o as p,c as e,a as n,b as s,d as o,e as c,r as i}from"./app.5c33355f.js";const l={},u=n("h1",{id:"http-\u670D\u52A1\u5668\u6A21\u5757\u7684\u4F7F\u7528",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#http-\u670D\u52A1\u5668\u6A21\u5757\u7684\u4F7F\u7528","aria-hidden":"true"},"#"),s(" http \u670D\u52A1\u5668\u6A21\u5757\u7684\u4F7F\u7528")],-1),r=n("p",null,"Node.js \u4E2D\u7684 HTTP \u63A5\u53E3\u65E8\u5728\u652F\u6301\u4F20\u7EDF\u4E0A\u96BE\u4EE5\u4F7F\u7528\u7684\u534F\u8BAE\u7684\u8BB8\u591A\u7279\u6027\u3002 \u7279\u522B\u662F\uFF0C\u5927\u5757\u7684\u3001\u53EF\u80FD\u5757\u7F16\u7801\u7684\u6D88\u606F\u3002 \u63A5\u53E3\u6C38\u8FDC\u4E0D\u4F1A\u7F13\u51B2\u6574\u4E2A\u8BF7\u6C42\u6216\u54CD\u5E94\uFF0C\u6240\u4EE5\u7528\u6237\u80FD\u591F\u6D41\u5F0F\u4F20\u8F93\u6570\u636E\u3002",-1),k={href:"http://nodejs.cn/api/http.html#http_http",target:"_blank",rel:"noopener noreferrer"},d=c(`<h2 id="\u57FA\u672C\u4F7F\u7528" tabindex="-1"><a class="header-anchor" href="#\u57FA\u672C\u4F7F\u7528" aria-hidden="true">#</a> \u57FA\u672C\u4F7F\u7528</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5F15\u5165 http \u670D\u52A1\u5668\u6A21\u5757</span>
<span class="token keyword">const</span> http <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;http&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u521B\u5EFA http \u670D\u52A1\u5668</span>
<span class="token comment">// \u53C2\u6570\u4E3A\u4E00\u4E2A\u56DE\u8C03\u51FD\u6570\uFF0C\u56DE\u8C03\u51FD\u6570\u4E2D\u4E24\u4E2A\u53C2\u6570\u4E3A \u8BF7\u6C42 \u548C \u54CD\u5E94</span>
http<span class="token punctuation">.</span><span class="token function">createServer</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">request<span class="token punctuation">,</span> response</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>request<span class="token punctuation">.</span>url <span class="token operator">===</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u6253\u5370\u5F53\u524D\u7684 url </span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// &#39;/&#39;</span>
        <span class="token comment">// \u8BBE\u7F6E\u54CD\u5E94\u5185\u5BB9</span>
        response<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">&#39;\u8FD9\u662F http \u670D\u52A1\u5668\u7684\u54CD\u5E94\u5185\u5BB9&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u54CD\u5E94\u7ED3\u675F</span>
        response<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// listen() \u65B9\u6CD5\uFF0C\u4E24\u4E2A\u53C2\u6570\uFF0C\u7B2C\u4E00\u4E2A\u662F\u670D\u52A1\u5668\u76D1\u542C\u7684\u7AEF\u53E3\u53F7\uFF0C\u7B2C\u4E8C\u4E2A\u662F\u670D\u52A1\u5668\u8FD0\u884C\u540E\u7684\u56DE\u8C03\u51FD\u6570</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">5000</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;http \u670D\u52A1\u5668\u5DF2\u8FD0\u884C&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u521B\u5EFA\u4E00\u4E2A\u7B80\u5355\u7684-web-\u670D\u52A1\u5668" tabindex="-1"><a class="header-anchor" href="#\u521B\u5EFA\u4E00\u4E2A\u7B80\u5355\u7684-web-\u670D\u52A1\u5668" aria-hidden="true">#</a> \u521B\u5EFA\u4E00\u4E2A\u7B80\u5355\u7684 Web \u670D\u52A1\u5668</h2><p>\u4E0B\u9762\u4EE3\u7801\u6F14\u793A\u4E86\u4E24\u79CD\u4E0D\u540C\u7684\u6839\u636E\u8BF7\u6C42\u5730\u5740\u5904\u7406\u8FD4\u56DE\u7ED3\u679C\u7684\u65B9\u6CD5</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5F15\u5165\u6A21\u5757</span>
<span class="token keyword">const</span> http <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;http&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u521B\u5EFA\u53D8\u91CF\uFF0C\u5B58\u50A8\u670D\u52A1\u5668\u5BF9\u8C61</span>
<span class="token keyword">const</span> server <span class="token operator">=</span> http<span class="token punctuation">.</span><span class="token function">createServer</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">request<span class="token punctuation">,</span> response</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u6253\u5370\u8BF7\u6C42\u7684 url</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// // \u5224\u65AD\u8BBF\u95EE\u7684 url ,\u8FD4\u56DE\u5BF9\u5E94\u7684\u9875\u9762</span>
    <span class="token comment">// if (request.url === &#39;/&#39;) {</span>
    <span class="token comment">//     fs.readFile(path.join(__dirname, &#39;/public&#39;, &#39;index.html&#39;), &#39;utf-8&#39;, (err, data) =&gt; {</span>
    <span class="token comment">//         if (err) console.log(err);</span>
    <span class="token comment">//         // \u8BBE\u7F6E\u54CD\u5E94\u5934\uFF0C\u7B2C\u4E00\u4E2A\u53C2\u6570\u662F\u72B6\u6001\u7801\uFF0C\u7B2C\u4E8C\u4E2A\u53C2\u6570\u662F\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u5305\u542B\u4E86\u54CD\u5E94\u5934</span>
    <span class="token comment">//         response.writeHead(200, { &#39;Content-Type&#39;: &#39;text/html&#39; });</span>
    <span class="token comment">//         // \u54CD\u5E94\u5185\u5BB9</span>
    <span class="token comment">//         response.end(data);</span>
    <span class="token comment">//     });</span>
    <span class="token comment">// }</span>
    <span class="token comment">// if (request.url === &#39;/about&#39;) {</span>
    <span class="token comment">//     fs.readFile(path.join(__dirname, &#39;/public&#39;, &#39;about.html&#39;), &#39;utf-8&#39;, (err, data) =&gt; {</span>
    <span class="token comment">//         if (err) console.log(err);</span>
    <span class="token comment">//         // \u8BBE\u7F6E\u54CD\u5E94\u5934</span>
    <span class="token comment">//         response.writeHead(200, { &#39;Content-Type&#39;: &#39;text/html&#39; });</span>
    <span class="token comment">//         // \u54CD\u5E94\u5185\u5BB9</span>
    <span class="token comment">//         response.end(data);</span>
    <span class="token comment">//     });</span>
    <span class="token comment">// }</span>

    <span class="token comment">// if (request.url === &#39;/api/users&#39;) {</span>
    <span class="token comment">//     // \u54CD\u5E94 json \u6570\u636E</span>
    <span class="token comment">//     const users = [</span>
    <span class="token comment">//         {</span>
    <span class="token comment">//             name: &quot;Bob&quot;,</span>
    <span class="token comment">//             age: 30</span>
    <span class="token comment">//         },</span>
    <span class="token comment">//         {</span>
    <span class="token comment">//             name: &#39;Sunny&#39;,</span>
    <span class="token comment">//             age: 26</span>
    <span class="token comment">//         }</span>
    <span class="token comment">//     ];</span>
    <span class="token comment">//     response.writeHead(200, { &#39;Content-Type&#39;: &#39;application/json&#39; });</span>
    <span class="token comment">//     response.end(JSON.stringify(users));</span>
    <span class="token comment">// }</span>

    <span class="token comment">// \u4F7F\u7528 \u4E09\u76EE\u8FD0\u7B97\u7B26\u5224\u65AD\u8BBF\u95EE\u7684 url \uFF0C\u8FD4\u56DE\u5BF9\u5E94\u7684\u9875\u9762</span>
    <span class="token comment">// \u521B\u5EFA\u53D8\u91CF\u5B58\u50A8\u6587\u4EF6\u8DEF\u5F84</span>
    <span class="token keyword">let</span> filePath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;public&#39;</span><span class="token punctuation">,</span> request<span class="token punctuation">.</span>url <span class="token operator">===</span> <span class="token string">&#39;/&#39;</span> <span class="token operator">?</span> <span class="token string">&#39;index.html&#39;</span> <span class="token operator">:</span> request<span class="token punctuation">.</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span>
    <span class="token comment">// \u521D\u59CB\u5316 content type</span>
    <span class="token keyword">let</span> contentType <span class="token operator">=</span> <span class="token string">&#39;text/html&#39;</span><span class="token punctuation">;</span>
    <span class="token comment">// \u6587\u4EF6\u6269\u5C55\u540D</span>
    <span class="token keyword">let</span> extname <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">extname</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u901A\u8FC7\u6269\u5C55\u540D\u8BBE\u7F6E content Type</span>
    <span class="token keyword">switch</span> <span class="token punctuation">(</span><span class="token parameter">extname</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">case</span> <span class="token string">&#39;.js&#39;</span><span class="token operator">:</span>
            contentType <span class="token operator">=</span> <span class="token string">&#39;text/javascript&#39;</span><span class="token punctuation">;</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token keyword">case</span> <span class="token string">&#39;.css&#39;</span><span class="token operator">:</span>
            contentType <span class="token operator">=</span> <span class="token string">&#39;text/css&#39;</span><span class="token punctuation">;</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token keyword">case</span> <span class="token string">&#39;.json&#39;</span><span class="token operator">:</span>
            contentType <span class="token operator">=</span> <span class="token string">&#39;application/json&#39;</span><span class="token punctuation">;</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token keyword">case</span> <span class="token string">&#39;.png&#39;</span><span class="token operator">:</span>
            contentType <span class="token operator">=</span> <span class="token string">&#39;image/png&#39;</span><span class="token punctuation">;</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token keyword">case</span> <span class="token string">&#39;.jpg&#39;</span><span class="token operator">:</span>
            contentType <span class="token operator">=</span> <span class="token string">&#39;image/jpg&#39;</span><span class="token punctuation">;</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u8BFB\u53D6\u6587\u4EF6</span>
    fs<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span>filePath<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5904\u7406\u53D1\u751F\u9519\u8BEF\u65F6\u7684\u60C5\u51B5</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">.</span>code <span class="token operator">=</span> <span class="token string">&#39;ENOENT&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u6CA1\u6709\u627E\u5230\u9875\u9762\uFF0C\u52A0\u8F7D 404.html</span>
                fs<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;/public&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;404.html&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    response<span class="token punctuation">.</span><span class="token function">writeHead</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token string">&#39;Content-Type&#39;</span><span class="token operator">:</span> <span class="token string">&#39;text/html&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    response<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u5176\u4ED6\u670D\u52A1\u5668\u9519\u8BEF</span>
                response<span class="token punctuation">.</span><span class="token function">writeHead</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                response<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\u670D\u52A1\u5668\u9519\u8BEF\uFF1A</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>err<span class="token punctuation">.</span>code<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// \u6210\u529F</span>
        response<span class="token punctuation">.</span><span class="token function">writeHead</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token string">&#39;Content-Type&#39;</span><span class="token operator">:</span> contentType <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        response<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token comment">// \u7AEF\u53E3\u53F7</span>
<span class="token comment">// \u5982\u679C\u6709\u73AF\u5883\u53D8\u91CF\u7684\u7AEF\u53E3\u5C31\u4F7F\u7528\u73AF\u5883\u53D8\u91CF\u7684\u7AEF\u53E3\uFF0C\u6CA1\u6709\u5C31\u4F7F\u7528 9999 \u7AEF\u53E3</span>
<span class="token keyword">const</span> <span class="token constant">PORT</span> <span class="token operator">=</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">PORT</span> <span class="token operator">||</span>  <span class="token number">9999</span><span class="token punctuation">;</span>

<span class="token comment">// \u76D1\u542C\u7AEF\u53E3\u53F7</span>
server<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token constant">PORT</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\u670D\u52A1\u5668\u5DF2\u7ECF\u5728 </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">PORT</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> \u7AEF\u53E3\u8FD0\u884C^-^</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// nodemon \u81EA\u52A8\u91CD\u542F\u5DE5\u5177\uFF1A</span>
<span class="token comment">// \u5728\u7F16\u5199\u8C03\u5F0F Node.js \u9879\u76EE\u7684\u8FC7\u7A0B\u4E2D\uFF0C\u4FEE\u6539\u4EE3\u7801\u540E\u9700\u8981\u9891\u7E41\u7684\u624B\u52A8\u5173\u6389\uFF0C\u7136\u540E\u518D\u542F\u52A8\uFF0C\u975E\u5E38\u7E41\u7410\u3002</span>
<span class="token comment">// nodemon \u7684\u4F5C\u7528\u662F\u76D1\u542C\u4EE3\u7801\u6587\u4EF6\u7684\u53D8\u52A8\uFF0C\u5E26\u4EE3\u7801\u6539\u53D8\u4E4B\u540E\uFF0C\u81EA\u52A8\u91CD\u542F\u3002</span>
<span class="token comment">// \u5B89\u88C5\uFF1Anpm install -g nodemon --save-dev</span>
<span class="token comment">// \u4F7F\u7528\uFF1A\u5728\u547D\u4EE4\u884C\u8F93\u5165 nodemon index.js \uFF08\u628A\u4E4B\u524D\u7684 node \u6539\u4E3A nodemon\uFF09</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5);function m(v,b){const a=i("ExternalLinkIcon");return p(),e("div",null,[u,r,n("p",null,[s("API\uFF1A"),n("a",k,[s("http://nodejs.cn/api/http.html#http_http"),o(a)])]),d])}var h=t(l,[["render",m],["__file","http.html.vue"]]);export{h as default};
